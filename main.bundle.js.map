{"version":3,"sources":["E:/AngularProjects/ClientDatabase_2/src async","E:/AngularProjects/ClientDatabase_2/src/app/addresses/address-detail-resolver.service.ts","E:/AngularProjects/ClientDatabase_2/src/app/addresses/address-detail.component.html","E:/AngularProjects/ClientDatabase_2/src/app/addresses/address-detail.component.ts","E:/AngularProjects/ClientDatabase_2/src/app/addresses/address.service.ts","E:/AngularProjects/ClientDatabase_2/src/app/addresses/address.ts","E:/AngularProjects/ClientDatabase_2/src/app/app-routing.module.ts","E:/AngularProjects/ClientDatabase_2/src/app/app.component.css","E:/AngularProjects/ClientDatabase_2/src/app/app.component.html","E:/AngularProjects/ClientDatabase_2/src/app/app.component.ts","E:/AngularProjects/ClientDatabase_2/src/app/app.module.ts","E:/AngularProjects/ClientDatabase_2/src/app/clients/client-detail-resolver.service.ts","E:/AngularProjects/ClientDatabase_2/src/app/clients/client-detail.component.html","E:/AngularProjects/ClientDatabase_2/src/app/clients/client-detail.component.ts","E:/AngularProjects/ClientDatabase_2/src/app/clients/client-form.component.html","E:/AngularProjects/ClientDatabase_2/src/app/clients/client-form.component.ts","E:/AngularProjects/ClientDatabase_2/src/app/clients/client-list-resolver.ts","E:/AngularProjects/ClientDatabase_2/src/app/clients/client-list.component.html","E:/AngularProjects/ClientDatabase_2/src/app/clients/client-list.component.ts","E:/AngularProjects/ClientDatabase_2/src/app/clients/client.service.ts","E:/AngularProjects/ClientDatabase_2/src/app/clients/client.ts","E:/AngularProjects/ClientDatabase_2/src/app/login/authentication.service.ts","E:/AngularProjects/ClientDatabase_2/src/app/login/can-activate-authguard.ts","E:/AngularProjects/ClientDatabase_2/src/app/login/login.component.css","E:/AngularProjects/ClientDatabase_2/src/app/login/login.component.html","E:/AngularProjects/ClientDatabase_2/src/app/login/login.component.ts","E:/AngularProjects/ClientDatabase_2/src/app/shared/validation-and-locale-messages.service.ts","E:/AngularProjects/ClientDatabase_2/src/app/utils/about-author.component.html","E:/AngularProjects/ClientDatabase_2/src/app/utils/about-author.component.ts","E:/AngularProjects/ClientDatabase_2/src/app/utils/mock-data.ts","E:/AngularProjects/ClientDatabase_2/src/app/utils/path-not-found.component.html","E:/AngularProjects/ClientDatabase_2/src/app/utils/path-not-found.component.ts","E:/AngularProjects/ClientDatabase_2/src/environments/environment.ts","E:/AngularProjects/ClientDatabase_2/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,8D;;;;;;;;;;;;;;;;;;;;ACNiD;AAIA;AAGjD,IAAa,qBAAqB;IAEhC,+BAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;IACnD,CAAC;IAED,uCAAO,GAAP,UAAQ,KAA6B;QACnC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzE,CAAC;IAEH,4BAAC;AAAD,CAAC;AATY,qBAAqB;IADjC,gFAAU,EAAE;yDAG0B,wEAAc,oBAAd,wEAAc;GAFxC,qBAAqB,CASjC;AATiC;;;;;;;;;ACPlC,wPAAwP,oFAAoF,0BAA0B,IAAI,wBAAwB,IAAI,uBAAuB,qIAAqI,yBAAyB,GAAG,wBAAwB,6QAA6Q,qGAAqG,kBAAkB,q1DAAq1D,4wBAA4wB,yBAAyB,iBAAiB,uBAAuB,iBAAiB,sBAAsB,mC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjmH;AAChC;AACgC;AACX;AACd;AACQ;AAEmD;AAKpG,IAAa,sBAAsB;IAgBjC,gCAAoB,eAA+B,EAAS,kBAAsD,EAC9F,MAAsB,EAAU,OAAe,EAAU,OAAsB,EAC/E,GAAqB;QAFrB,oBAAe,GAAf,eAAe,CAAgB;QAAS,uBAAkB,GAAlB,kBAAkB,CAAoC;QAC9F,WAAM,GAAN,MAAM,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAe;QAC/E,QAAG,GAAH,GAAG,CAAkB;QARlC,eAAU,GAAG;YAClB,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,EAAE;YAChB,SAAS,EAAE,EAAE;SACd,CAAC;QAKA,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAgCC;QA/BC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,aAAa,GAAG,IAAI,yDAAO,EAAE,CAAC;YACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACpD,IAAM,WAAS,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAClE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,UAAC,OAAO,IAAK,cAAO,CAAC,EAAE,KAAK,WAAS,EAAxB,CAAwB,CAAC,CAAC;YACtE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAExD,IAAM,EAAE,GAAG,IAAI,mEAAW,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAM,UAAU,GAAG,IAAI,mEAAW,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAC9D,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,IAAM,QAAQ,GAAG,IAAI,mEAAW,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAC1D,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,IAAM,OAAO,GAAG,IAAI,mEAAW,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EACxD,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACpE,kEAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAE1C,IAAI,CAAC,WAAW,GAAG,IAAI,iEAAS,CAAC;YAC/B,EAAE,EAAE,EAAE;YACN,UAAU,EAAE,UAAU;YACtB,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,UAAU,EAAE,IAAI,CAAC,EAA/E,CAA+E,CAAC,CAAC;QAEjI,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5E,CAAC;IAED,+BAA+B;IAC/B,2BAA2B;IAC3B,EAAE;IACF,6BAA6B;IAC7B,kCAAkC;IAClC,aAAa;IACb,mDAAmD;IACnD,gBAAgB;IAChB,eAAe;IACf,qCAAqC;IACrC,QAAQ;IACR,MAAM;IACN,IAAI;IAEJ,wCAAwC;IACxC,iDAAiD;IACjD,sFAAsF;IACtF,qGAAqG;IACrG,uEAAuE;IACvE,iBAAiB;IACjB,4BAA4B;IAC5B,8FAA8F;IAC9F,yEAAyE;IACzE,iBAAiB;IACjB,iGAAiG;IACjG,UAAU;IACV,QAAQ;IACR,OAAO;IACP,IAAI;IAEJ,iDAAiD;IACjD,iDAAiD;IACjD,gCAAgC;IAChC,sEAAsE;IACtE,gHAAgH;IAChH,uGAAuG;IACvG,IAAI;IAEI,+DAA8B,GAAtC;QACE,8CAA8C;QAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU;eAClE,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO;eAC7D,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,eAAe,CAAC,EAC9E,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC,CAAC;YAC9D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,uCAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;IAChE,CAAC;IACH,6BAAC;AAAD,CAAC;AA9GY,sBAAsB;IAHlC,+EAAS,CAAC;QACT,+FAA8C;KAC/C,CAAC;yDAiBqC,wEAAc,oBAAd,wEAAc,sDAA6B,0HAAkC,oBAAlC,0HAAkC,sDACtF,uEAAc,oBAAd,uEAAc,sDAAmB,+DAAM,oBAAN,+DAAM,sDAAmB,yDAAa,oBAAb,yDAAa,sDAC1E,+DAAgB,oBAAhB,+DAAgB;GAlB9B,sBAAsB,CA8GlC;AA9GkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZM;AAC6B;AAE3B;AACb;AACG;AACF;AACI;AAOnC,IAAa,cAAc;IAIzB,wBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAF/B,qBAAgB,GAAG,uBAAuB,CAAC;IAG3C,CAAC;IAED,wCAAe,GAAf,UAAgB,EAAU;QACxB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC;aACpE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,CAAC,SAAsB,EAAtC,CAAsC,CAAC;aACnE,EAAE,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAA3C,CAA2C,CAAC;aACvD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,qCAAY,GAAZ;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QAC9D,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,UAAU,YAAY,EAAE,KAAK,EAAE,KAAK;YAC9C,EAAE,CAAC,CAAC,SAAS,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChC,SAAS,GAAG,YAAY,CAAC,EAAE,CAAC;YAC9B,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEO,oCAAW,GAAnB,UAAoB,KAAe;QACjC,IAAI,YAAY,CAAC;QACjB,IAAI,CAAC;YACH,YAAY,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC;QAC3C,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,YAAY,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QAC9B,CAAC;gBAAS,CAAC;YACT,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,YAAY,IAAI,cAAc,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC;IAEO,sCAAa,GAArB;QACE,MAAM,CAAC,IAAI,qEAAc,CAAC;YACxB,OAAO,EAAE,IAAI,8DAAO,CAAC;gBACnB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IACH,qBAAC;AAAD,CAAC;AA3CY,cAAc;IAD1B,gFAAU,EAAE;yDAKgB,2DAAI,oBAAJ,2DAAI;GAJpB,cAAc,CA2C1B;AA3C0B;;;;;;;;;;ACd3B;AAAA;IAAA;IAKA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLsC;AACM;AACA;AACuB;AACA;AACI;AACJ;AACG;AACW;AACJ;AACF;AACR;AACb;AA+CvD,IAAa,gBAAgB;IAA7B;IACA,CAAC;IAAD,uBAAC;AAAD,CAAC;AADY,gBAAgB;IA7C5B,8EAAQ,CAAC;QACR,OAAO,EAAE;YACP,6DAAY;YACZ,qEAAY,CAAC,OAAO,CAAC;gBACnB,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2FAAmB,EAAC;gBACjD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,2FAAmB,EAAE,WAAW,EAAE,CAAC,4FAAoB,CAAC,EAAC;gBAC1F;oBACE,IAAI,EAAE,qBAAqB;oBAC3B,SAAS,EAAE,+FAAqB;oBAChC,OAAO,EAAE;wBACP,MAAM,EAAE,qGAAoB;wBAC5B,SAAS,EAAE,yGAAqB;qBACjC;oBACD,WAAW,EAAE,CAAC,4FAAoB,CAAC;iBACpC;gBACD;oBACE,IAAI,EAAE,aAAa;oBACnB,SAAS,EAAE,2FAAmB;oBAC9B,OAAO,EAAE,EAAC,MAAM,EAAE,qGAAoB,EAAC;oBACvC,WAAW,EAAE,CAAC,4FAAoB,CAAC;iBACpC;gBACD;oBACE,IAAI,EAAE,gCAAgC;oBACtC,SAAS,EAAE,oGAAsB;oBACjC,OAAO,EAAE;wBACP,SAAS,EAAE,yGAAqB;wBAChC,MAAM,EAAE,qGAAoB;qBAC7B;oBACD,WAAW,EAAE,CAAC,4FAAoB,CAAC;iBACpC;gBACD;oBACE,IAAI,EAAE,wBAAwB;oBAC9B,SAAS,EAAE,oGAAsB;oBACjC,WAAW,EAAE,CAAC,4FAAoB,CAAC;iBACpC;gBACD,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2FAAoB,EAAE,MAAM,EAAE,UAAU,EAAC;gBACtE,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+EAAc,EAAC;gBAC1C,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAC;gBACpD,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,8FAAqB,EAAC;aAC/C,CAAC;SACH;QACD,OAAO,EAAE;YACP,qEAAY;SACb;KACF,CAAC;GACW,gBAAgB,CAC5B;AAD4B;;;;;;;;AC3D7B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,20BAA20B,mBAAmB,+1B;;;;;;;;;;;;;;;;;;;;;ACA9yB;AACT;AAC8B;AAOrE,IAAa,YAAY;IAKvB,sBAAoB,OAAe,EAAS,sBAA6C;QAArE,YAAO,GAAP,OAAO,CAAQ;QAAS,2BAAsB,GAAtB,sBAAsB,CAAuB;IAAI,CAAC;IAE9F,sCAAe,GAAf;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,sBAAsB,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;QAC7D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,sBAAsB,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;QAC7D,CAAC;IACH,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IACH,mBAAC;AAAD,CAAC;AApBY,YAAY;IALxB,+EAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,0EAAmC;QACnC,yEAAkC;KACnC,CAAC;yDAM6B,+DAAM,oBAAN,+DAAM,sDAAiC,4FAAqB,oBAArB,4FAAqB;GAL9E,YAAY,CAoBxB;AApBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTyB;AACL;AACuB;AACI;AACJ;AACA;AACG;AACK;AACpB;AACQ;AACzB;AACsC;AACpC;AACc;AACI;AACmB;AACI;AAC5B;AACC;AACa;AACC;AACH;AACiC;AACpC;AACpB;AAuC3C,IAAa,SAAS;IAAtB;IACA,CAAC;IAAD,gBAAC;AAAD,CAAC;AADY,SAAS;IArCrB,8EAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;YACZ,2FAAmB;YACnB,+FAAqB;YACrB,2FAAmB;YACnB,8FAAqB;YACrB,2FAAoB;YACpB,mGAAsB;YACtB,+EAAc;SACf;QACD,OAAO,EAAE;YACP,wEAAa;YACb,2EAAmB;YACnB,mEAAW;YACX,kEAAU;YACV,8EAAgB;YAChB,wDAAW,CAAC,OAAO,EAAE;YACrB,sGAAuB;YACvB,wFAAoB,CAAC,OAAO,CAAC,mEAAQ,EAAE;gBACrC,kBAAkB,EAAE,IAAI;gBACxB,KAAK,EAAE,GAAG;aACX,CAAC;SACH;QACD,SAAS,EAAE;YACT,EAAC,OAAO,EAAE,wDAAS,EAAE,QAAQ,EAAE,IAAI,EAAC;YACpC,+EAAa;YACb,sGAAoB;YACpB,0FAAkB;YAClB,mFAAc;YACd,0GAAqB;YACrB,6FAAqB;YACrB,4FAAoB;YACpB,2HAAkC;SACnC;QACD,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CACrB;AADqB;;;;;;;;;;;;;;;;;;;;;AC/DmB;AAGM;AAI/C,IAAa,oBAAoB;IAE/B,8BAAoB,cAA6B;QAA7B,mBAAc,GAAd,cAAc,CAAe;IACjD,CAAC;IAED,sCAAO,GAAP,UAAQ,KAA6B;QACnC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAClE,CAAC;IAEH,2BAAC;AAAD,CAAC;AATY,oBAAoB;IADhC,gFAAU,EAAE;yDAGyB,sEAAa,oBAAb,sEAAa;GAFtC,oBAAoB,CAShC;AATgC;;;;;;;;;ACPjC,oEAAoE,sEAAsE,0CAA0C,0FAA0F,4CAA4C,0EAA0E,+GAA+G,udAAud,cAAc,mBAAmB,oBAAoB,mBAAmB,qBAAqB,mBAAmB,mBAAmB,osC;;;;;;;;;;;;;;;;;;;;;;;;ACA3gC;AACN;AACL;AAGd;AAC2D;AAOpG,IAAa,qBAAqB;IAMhC,+BAAoB,eAA+B,EAAU,MAAsB,EAC/D,kBAAsD,EACtD,OAAe,EAAU,OAAsB,EAAU,GAAqB;QAF9E,oBAAe,GAAf,eAAe,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAgB;QAC/D,uBAAkB,GAAlB,kBAAkB,CAAoC;QACtD,YAAO,GAAP,OAAO,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAe;QAAU,QAAG,GAAH,GAAG,CAAkB;QAChG,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,4CAAY,GAAZ,UAAa,SAAkB;QAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,SAAS,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QACjC,CAAC;IACH,CAAC;IAED,4CAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC,CAAC;QAClE,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,+CAAe,GAAf;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAC5F,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,kDAAkB,GAAlB;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAC5F,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAChE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAChG,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC;YAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,EACrF,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,CAAC;QAClE,CAAC;IACH,CAAC;IAED,+BAA+B;IAC/B,+BAA+B;IAC/B,iGAAiG;IACjG,uEAAuE;IACvE,yGAAyG;IACzG,mBAAmB;IACnB,aAAa;IACb,4BAA4B;IAC5B,MAAM;IACN,IAAI;IAEJ,kCAAkC;IAClC,sBAAsB;IACtB,wFAAwF;IACxF,4FAA4F;IAC5F,iBAAiB;IACjB,kBAAkB;IAClB,+GAA+G;IAC/G,WAAW;IACX,mBAAmB;IACnB,gHAAgH;IAChH,UAAU;IACV,SAAS;IACT,8BAA8B;IAC9B,sBAAsB;IACtB,+FAA+F;IAC/F,0BAA0B;IAC1B,4GAA4G;IAC5G,mGAAmG;IACnG,yCAAyC;IACzC,8EAA8E;IAC9E,gHAAgH;IAChH,uBAAuB;IACvB,iBAAiB;IACjB,kBAAkB;IAClB,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,IAAI;IAEI,6CAAa,GAArB,UAAsB,OAAe,EAAE,IAAsB;QAAtB,qCAAsB;QAC3D,OAAO,CAAC,KAAK,CAAC;YACZ,OAAO,EAAE,OAAO;YAChB,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAEO,6CAAa,GAArB;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAElD,IAAM,kBAAkB,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAClD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC;IAEO,+CAAe,GAAvB;QAAA,iBAMC;QALC,IAAM,OAAO,GAAa,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QACtE,IAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,EAAE,KAAK,KAAI,CAAC,MAAM,CAAC,EAAE,EAA5B,CAA4B,CAAC,CAAC;QAC1E,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;QAEnD,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,sCAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACtC,CAAC;IACH,4BAAC;AAAD,CAAC;AA3HY,qBAAqB;IAHjC,+EAAS,CAAC;QACT,4FAA6C;KAC9C,CAAC;yDAOqC,kFAAc,oBAAd,kFAAc,sDAAkB,uEAAc,oBAAd,uEAAc,sDAC3C,0HAAkC,oBAAlC,0HAAkC,sDAC7C,+DAAM,oBAAN,+DAAM,sDAAmB,yDAAa,oBAAb,yDAAa,sDAAe,+DAAgB,oBAAhB,+DAAgB;GARvF,qBAAqB,CA2HjC;AA3HiC;;;;;;;;;ACblC,gOAAgO,gFAAgF,yBAAyB,GAAG,wBAAwB,4XAA4X,qGAAqG,iBAAiB,4zDAA4zD,ouBAAouB,wBAAwB,iBAAiB,uBAAuB,mC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp3G;AAClC;AACkC;AACX;AACR;AACN;AAC2D;AAKpG,IAAa,mBAAmB;IAc9B,6BAAoB,cAA6B,EAAU,kBAAsD,EAC7F,MAAsB,EAAU,OAAe,EAAU,OAAsB,EAAU,GAAqB;QAD9G,mBAAc,GAAd,cAAc,CAAe;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoC;QAC7F,WAAM,GAAN,MAAM,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAe;QAAU,QAAG,GAAH,GAAG,CAAkB;QAN3H,eAAU,GAAG;YAClB,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;SACf,CAAC;QAIA,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAwBC;QAvBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,GAAG,IAAI,uDAAM,EAAE,CAAC;YACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC;QAED,IAAM,EAAE,GAAG,IAAI,mEAAW,EAAE,CAAC;QAC7B,IAAM,SAAS,GAAG,IAAI,mEAAW,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAC3D,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,IAAM,QAAQ,GAAG,IAAI,mEAAW,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EACzD,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAElD,IAAI,CAAC,UAAU,GAAG,IAAI,iEAAS,CAAC;YAC9B,EAAE,EAAE,EAAE;YACN,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,EAAE,IAAI,CAAC,EAA9E,CAA8E,CAAC,CAAC;QAE/H,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,kCAAkC;IAC9G,CAAC;IAED,sCAAQ,GAAR,UAAS,EAAU;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,IAAI,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC;gBACzC,MAAM,CAAC;YACT,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC;IACH,CAAC;IAEO,gDAAkB,GAA1B;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAE1C,IAAM,OAAO,GAAa,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;QAE9D,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,EAC/E,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAChC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAC3D,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC,CAAC;QAC1E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,aAAa,CAAC,EAC9E,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,CAAC;QAClE,CAAC;IACH,CAAC;IAEO,+CAAiB,GAAzB,UAA0B,EAAU;QAApC,iBAaC;QAZC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,CAAC;QAE1B,IAAM,OAAO,GAAa,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QACtE,IAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,EAAE,KAAK,KAAI,CAAC,YAAY,CAAC,EAAE,EAAlC,CAAkC,CAAC,CAAC;QAChF,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;QACrD,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QAEnD,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAEzD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,eAAe,CAAC,EAChF,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,CAAC;IAClE,CAAC;IAEO,2DAA6B,GAArC;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;eAC5D,IAAI,CAAC,YAAY,CAAC,SAAS,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YACrE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,cAAc,CAAC,EAC7E,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC,CAAC;YAC9D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACtC,CAAC;IACH,0BAAC;AAAD,CAAC;AA9GY,mBAAmB;IAH/B,+EAAS,CAAC;QACT,0FAA2C;KAC5C,CAAC;yDAeoC,sEAAa,oBAAb,sEAAa,sDAA8B,0HAAkC,oBAAlC,0HAAkC,sDACrF,uEAAc,oBAAd,uEAAc,sDAAmB,+DAAM,oBAAN,+DAAM,sDAAmB,yDAAa,oBAAb,yDAAa,sDAAe,+DAAgB,oBAAhB,+DAAgB;GAfvH,mBAAmB,CA8G/B;AA9G+B;;;;;;;;;;;;;;;;;;;;;;ACXS;AAGM;AAI/C,IAAa,kBAAkB;IAC7B,4BAAoB,cAA6B;QAA7B,mBAAc,GAAd,cAAc,CAAe;IACjD,CAAC;IAED,oCAAO,GAAP,UAAQ,KAA6B;QACnC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IAC7C,CAAC;IAEH,yBAAC;AAAD,CAAC;AARY,kBAAkB;IAD9B,gFAAU,EAAE;yDAEyB,sEAAa,oBAAb,sEAAa;GADtC,kBAAkB,CAQ9B;AAR8B;;;;;;;;;ACP/B,mGAAmG,ujBAAujB,aAAa,qBAAqB,oBAAoB,qBAAqB,mBAAmB,qBAAqB,8CAA8C,qBAAqB,+BAA+B,ykCAAykC,gBAAgB,qD;;;;;;;;;;;;;;;;;;;;;;;;ACAt4D;AAEnB;AACR;AACE;AAC2D;AAOpG,IAAa,mBAAmB;IAQ9B,6BAAoB,cAA6B,EAAU,OAAe,EACtD,kBAAsD,EACtD,OAAsB,EAAU,GAAqB;QAFrD,mBAAc,GAAd,cAAc,CAAe;QAAU,YAAO,GAAP,OAAO,CAAQ;QACtD,uBAAkB,GAAlB,kBAAkB,CAAoC;QACtD,YAAO,GAAP,OAAO,CAAe;QAAU,QAAG,GAAH,GAAG,CAAkB;QAJlE,iBAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC;QAKtF,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,sBAAI,uCAAM;aAAV;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAa;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QACtF,CAAC;;;OALA;IAOO,2CAAa,GAArB,UAAsB,MAAc;QAClC,MAAM,GAAG,MAAM,CAAC,iBAAiB,EAAE,CAAC;QACpC,IAAM,QAAQ,GAAa,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,eAAe,GAAa,EAAE,CAAC;QAEnC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,MAAc;gBACnD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;uBAClE,MAAM,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,MAAc;gBACnD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;uBAC7D,MAAM,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACL,CAAC;QACD,EAAE,CAAC,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;YACrF,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,eAAe,CAAC;QACzB,CAAC;IACH,CAAC;IAED,0CAAY,GAAZ,UAAa,SAAiB;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAChC,CAAC;QACD,0EAA0E;IAC5E,CAAC;IAED,oCAAM,GAAN;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC;YACrE,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,sCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IAEO,2CAAa,GAArB;QAAA,iBA+BC;QA9BC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC;QACT,CAAC;QACD,OAAO,CAAC,OAAO,CAAC;YACd,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,0BAA0B,CAAC;YAC/E,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,4BAA4B,CAAC;YACnF,OAAO,EAAE;gBACP,MAAM,EAAE;oBACN,KAAK,EAAE,8BAA8B,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,cAAc,CAAC;iBACrG;gBACD,OAAO,EAAE;oBACP,KAAK,EAAE,8BAA8B,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,eAAe,CAAC;iBACtG;aACF;YACD,QAAQ,EAAE,UAAC,MAAM;gBACf,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACX,IAAM,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAM,IAAI,aAAM,KAAK,KAAI,CAAC,YAAY,EAA5B,CAA4B,CAAC,CAAC;oBACzE,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,eAAe,CAAC,EAChF,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,CAAC;oBAChE,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC9D,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC;gBACT,CAAC;YACH,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,0CAAY,GAAZ;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAEO,2CAAa,GAArB;QAAA,iBAkBC;QAjBC,IAAM,gBAAgB,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAC5C,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAC3C,iBAAO;gBACL,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACvB,KAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,OAAO,CAAC;gBACpC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAChE,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC;gBAClF,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,YAAY,EAAE,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC,CAAC;YACpG,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IAEO,kDAAoB,GAA5B;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC;QACpF,CAAC;IACH,CAAC;IAEO,6CAAe,GAAvB;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACvB,OAAO,CAAC,KAAK,CAAC;gBACZ,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,gBAAgB,CAAC;gBACvE,IAAI,EAAE,OAAO;gBACb,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH,0BAAC;AAAD,CAAC;AA7JY,mBAAmB;IAH/B,+EAAS,CAAC;QACT,0FAAyC;KAC1C,CAAC;yDASoC,sEAAa,oBAAb,sEAAa,sDAAmB,+DAAM,oBAAN,+DAAM,sDAClC,0HAAkC,oBAAlC,0HAAkC,sDAC7C,yDAAa,oBAAb,yDAAa,sDAAe,+DAAgB,oBAAhB,+DAAgB;GAV9D,mBAAmB,CA6J/B;AA7J+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZS;AAC6B;AAE3B;AACb;AACG;AACF;AACI;AACH;AAMhC,IAAa,aAAa;IAIxB,uBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAF/B,mBAAc,GAAG,cAAc,CAAC;IAGhC,CAAC;IAED,qCAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;aACvC,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAc,EAA3B,CAA2B,CAAC;aACxD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,iCAAS,GAAT,UAAU,QAAgB;QACxB,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QAC5D,IAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,EAAE,KAAK,QAAQ,EAAtB,CAAsB,CAAC,CAAC;QACpE,MAAM,CAAC,2DAAU,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;IACrC,CAAC;IAED,oCAAY,GAAZ;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QAC5D,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,UAAU,YAAY,EAAE,KAAK,EAAE,KAAK;YAC9C,EAAE,CAAC,CAAC,SAAS,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChC,SAAS,GAAG,YAAY,CAAC,EAAE,CAAC;YAC9B,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEO,mCAAW,GAAnB,UAAoB,KAAe;QACjC,IAAI,YAAY,CAAC;QACjB,IAAI,CAAC;YACH,YAAY,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC;QAC3C,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,YAAY,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QAC9B,CAAC;gBAAS,CAAC;YACT,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,YAAY,IAAI,cAAc,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC;IAEO,qCAAa,GAArB;QACE,MAAM,CAAC,IAAI,qEAAc,CAAC;YACxB,OAAO,EAAE,IAAI,8DAAO,CAAC;gBACnB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IACH,oBAAC;AAAD,CAAC;AAhDY,aAAa;IADzB,gFAAU,EAAE;yDAKgB,2DAAI,oBAAJ,2DAAI;GAJpB,aAAa,CAgDzB;AAhDyB;;;;;;;;;;ACZ1B;AAAA;IAAA;IAMA,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACRwC;AAIV;AACE;AACE;AAGnC,IAAa,qBAAqB;IAAlC;IAsBA,CAAC;IAjBC,0CAAU,GAAV;QACE,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAC/C,CAAC;IAED,qCAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;QACtC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,sCAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACzC,CAAC;IAED,2CAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACH,4BAAC;AAAD,CAAC;AAtBY,qBAAqB;IADjC,gFAAU,EAAE;GACA,qBAAqB,CAsBjC;AAtBiC;;;;;;;;;;;;;;;;;;;;;;ACTO;AACwD;AAClC;AAG/D,IAAa,oBAAoB;IAE/B,8BAAoB,MAAc,EAAU,WAAkC;QAA1D,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAuB;IAC9E,CAAC;IAED,0CAAW,GAAX,UAAY,MAA8B,EAAE,MAA2B;QACrE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IACH,2BAAC;AAAD,CAAC;AAbY,oBAAoB;IADhC,gFAAU,EAAE;yDAGiB,+DAAM,oBAAN,+DAAM,sDAAuB,sFAAqB,oBAArB,sFAAqB;GAFnE,oBAAoB,CAahC;AAbgC;;;;;;;;;ACLjC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,mJAAmJ,eAAe,0+CAA0+C,uBAAuB,mBAAmB,uBAAuB,6C;;;;;;;;;;;;;;;;;;;;;;;;;ACA3oD;AACX;AACW;AACkC;AACrC;AACtB;AAQzC,IAAa,cAAc;IASzB,wBAAoB,OAAe,EAAU,sBAA6C,EACtE,kBAAsD,EAAU,OAAsB,EACtF,GAAqB,EAAU,MAAsB;QAFrD,YAAO,GAAP,OAAO,CAAQ;QAAU,2BAAsB,GAAtB,sBAAsB,CAAuB;QACtE,uBAAkB,GAAlB,kBAAkB,CAAoC;QAAU,YAAO,GAAP,OAAO,CAAe;QACtF,QAAG,GAAH,GAAG,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAgB;QARlE,eAAU,GAAG;YAClB,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;SACf,CAAC;QAMA,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC;QAErC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC;QACrF,CAAC;QAED,IAAM,QAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,IAAM,QAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE5D,IAAI,CAAC,QAAQ,GAAG,IAAI,iEAAS,CAAC;YAC5B,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,UAAU,EAAE,IAAI,CAAC,EAA5E,CAA4E,CAAC,CAAC;QAE3H,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACzE,CAAC;IAED,8BAAK,GAAL;QACE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC9F,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACtC,CAAC;IACH,qBAAC;AAAD,CAAC;AAvCY,cAAc;IAJ1B,+EAAS,CAAC;QACT,kFAAqC;QACrC,iFAAoC;KACrC,CAAC;yDAU6B,+DAAM,oBAAN,+DAAM,sDAAkC,sFAAqB,oBAArB,sFAAqB,sDAClD,0HAAkC,oBAAlC,0HAAkC,sDAAmB,yDAAa,oBAAb,yDAAa,sDACjF,+DAAgB,oBAAhB,+DAAgB,sDAAkB,uEAAc,oBAAd,uEAAc;GAX9D,cAAc,CAuC1B;AAvC0B;;;;;;;;;;;;;;;;;;;;;;;;ACbiC;AAI5D,IAAa,kCAAkC;IAgI7C,4CAAsC,QAAgB;QAAhB,aAAQ,GAAR,QAAQ,CAAQ;QA/H/C,uBAAkB,GAAG;YAC1B,EAAE,EAAE;gBACF,WAAW,EAAE;oBACX,UAAU,EAAE,yBAAyB;oBACrC,WAAW,EAAE,gDAAgD;iBAC9D;gBACD,UAAU,EAAE;oBACV,UAAU,EAAE,wBAAwB;oBACpC,WAAW,EAAE,+CAA+C;iBAC7D;gBACD,YAAY,EAAE;oBACZ,UAAU,EAAE,0BAA0B;oBACtC,WAAW,EAAE,iDAAiD;iBAC/D;gBACD,UAAU,EAAE;oBACV,UAAU,EAAE,wBAAwB;oBACpC,WAAW,EAAE,+CAA+C;iBAC7D;gBACD,SAAS,EAAE;oBACT,UAAU,EAAE,sBAAsB;oBAClC,WAAW,EAAE,yCAAyC;oBACtD,WAAW,EAAE,yCAAyC;oBACtD,SAAS,EAAE,qCAAqC;iBACjD;gBACD,UAAU,EAAE;oBACV,UAAU,EAAE,uBAAuB;oBACnC,WAAW,EAAE,8CAA8C;iBAC5D;gBACD,UAAU,EAAE;oBACV,UAAU,EAAE,uBAAuB;iBACpC;aACF;YACD,EAAE,EAAE;gBACF,WAAW,EAAE;oBACX,UAAU,EAAE,6BAA6B;oBACzC,WAAW,EAAE,qDAAqD;iBACnE;gBACD,UAAU,EAAE;oBACV,UAAU,EAAE,iCAAiC;oBAC7C,WAAW,EAAE,yDAAyD;iBACvE;gBACD,YAAY,EAAE;oBACZ,UAAU,EAAE,4BAA4B;oBACxC,WAAW,EAAE,oDAAoD;iBAClE;gBACD,UAAU,EAAE;oBACV,UAAU,EAAE,6BAA6B;oBACzC,WAAW,EAAE,qDAAqD;iBACnE;gBACD,SAAS,EAAE;oBACT,UAAU,EAAE,6BAA6B;oBACzC,WAAW,EAAE,qDAAqD;oBAClE,WAAW,EAAE,qDAAqD;oBAClE,SAAS,EAAE,yCAAyC;iBACrD;gBACD,UAAU,EAAE;oBACV,UAAU,EAAE,kCAAkC;oBAC9C,WAAW,EAAE,0DAA0D;iBACxE;gBACD,UAAU,EAAE;oBACV,UAAU,EAAE,sBAAsB;iBACnC;aACF;SACF,CAAC;QAEK,wBAAmB,GAAG;YAC3B,EAAE,EAAE;gBACF,eAAe,EAAE,yBAAyB;gBAC1C,cAAc,EAAE,iCAAiC;gBACjD,iBAAiB,EAAE,+EAA+E;gBAClG,oBAAoB,EAAE,yCAAyC;gBAC/D,yBAAyB,EAAE,6DAA6D;gBACxF,2BAA2B,EAAE,kBAAkB;gBAC/C,6BAA6B,EAAE,yCAAyC;gBAExE,cAAc,EAAE,wBAAwB;gBACxC,aAAa,EAAE,gCAAgC;gBAC/C,gBAAgB,EAAE,uBAAuB;gBACzC,0BAA0B,EAAE,iBAAiB;gBAC7C,4BAA4B,EAAE,wCAAwC;gBAEtE,mBAAmB,EAAE,2CAA2C;gBAChE,kBAAkB,EAAE,uDAAuD;gBAC3E,cAAc,EAAE,QAAQ;gBACxB,eAAe,EAAE,SAAS;gBAC1B,gBAAgB,EAAE,uBAAuB;gBACzC,eAAe,EAAE,oBAAoB;gBACrC,iBAAiB,EAAE,6CAA6C;gBAChE,eAAe,EAAE,8DAA8D;gBAC/E,eAAe,EAAE,oBAAoB;gBACrC,YAAY,EAAE,QAAQ;gBACtB,cAAc,EAAE,UAAU;gBAE1B,uEAAuE;gBACvE,eAAe,EAAE,kCAAkC;gBACnD,eAAe,EAAE,kCAAkC;gBACnD,oBAAoB,EAAG,sCAAsC;aAC9D;YACD,EAAE,EAAE;gBACF,eAAe,EAAE,qBAAqB;gBACtC,cAAc,EAAE,gCAAgC;gBAChD,iBAAiB,EAAE,4EAA4E;gBAC/F,oBAAoB,EAAE,uCAAuC;gBAC7D,yBAAyB,EAAE,8CAA8C;gBACzE,2BAA2B,EAAE,kBAAkB;gBAC/C,6BAA6B,EAAE,uCAAuC;gBAEtE,cAAc,EAAE,sBAAsB;gBACtC,aAAa,EAAE,iCAAiC;gBAChD,gBAAgB,EAAE,0BAA0B;gBAC5C,0BAA0B,EAAE,mBAAmB;gBAC/C,4BAA4B,EAAE,0CAA0C;gBAExE,mBAAmB,EAAE,yCAAyC;gBAC9D,kBAAkB,EAAE,8DAA8D;gBAClF,cAAc,EAAE,QAAQ;gBACxB,eAAe,EAAE,WAAW;gBAC5B,gBAAgB,EAAE,uBAAuB;gBACzC,eAAe,EAAE,iCAAiC;gBAClD,iBAAiB,EAAE,0DAA0D;gBAC7E,eAAe,EAAE,uDAAuD;gBACxE,eAAe,EAAE,sBAAsB;gBACvC,YAAY,EAAE,OAAO;gBACrB,cAAc,EAAE,SAAS;aAC1B;SACF,CAAC;IAGF,CAAC;IAEM,2EAA8B,GAArC,UAAsC,KAAU;QAC9C,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC;IAEM,iEAAoB,GAA3B,UAA4B,KAAa;QACvC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;IACxD,CAAC;IAEM,2DAAc,GAArB,UAAsB,IAAe,EAAE,UAAc,EAAE,IAAW;QAChE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,MAAM,CAAC;QACT,CAAC;QACD,GAAG,CAAC,CAAC,IAAM,KAAK,IAAI,UAAU,CAAC,CAAC,CAAC;YAC/B,EAAE,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrC,cAAc;gBACd,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACvB,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAChC,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC/C,IAAM,QAAQ,GAAG,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;oBAC5D,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;wBACjC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BACvC,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;wBAC3C,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IACH,yCAAC;AAAD,CAAC;AA/JY,kCAAkC;IAD9C,gFAAU,EAAE;IAiIE,uFAAM,CAAC,wDAAS,CAAC;;GAhInB,kCAAkC,CA+J9C;AA/J8C;;;;;;;;ACJ/C,0Y;;;;;;;;;;;;;;;;;;;ACAkD;AAKlD,IAAa,oBAAoB;IAE/B;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IACH,2BAAC;AAAD,CAAC;AANY,oBAAoB;IAHhC,+EAAS,CAAC;QACT,yFAA4C;KAC7C,CAAC;;GACW,oBAAoB,CAMhC;AANgC;;;;;;;;;ACHjC;AAAA;IAAA;IAoMA,CAAC;IAnMC,2BAAQ,GAAR;QACE,IAAI,OAAO,GAAG;YACZ;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE,MAAM;gBACnB,UAAU,EAAE,QAAQ;gBACpB,oBAAoB,EAAE,aAAa;gBACnC,aAAa,EAAE;oBACb,IAAI,EAAE,CAAC;oBACP,YAAY,EAAE,WAAW;oBACzB,UAAU,EAAE,UAAU;oBACtB,SAAS,EAAE,QAAQ;iBACpB;aACF;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE,MAAM;gBACnB,UAAU,EAAE,QAAQ;gBACpB,oBAAoB,EAAE,aAAa;gBACnC,aAAa,EAAE;oBACb,IAAI,EAAE,CAAC;oBACP,YAAY,EAAE,YAAY;oBAC1B,UAAU,EAAE,SAAS;oBACrB,SAAS,EAAE,QAAQ;iBACpB;aACF;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE,MAAM;gBACnB,UAAU,EAAE,QAAQ;gBACpB,oBAAoB,EAAE,aAAa;gBACnC,aAAa,EAAE;oBACb,IAAI,EAAE,CAAC;oBACP,YAAY,EAAE,UAAU;oBACxB,UAAU,EAAE,WAAW;oBACvB,SAAS,EAAE,QAAQ;iBACpB;aACF;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE,SAAS;gBACtB,UAAU,EAAE,SAAS;gBACrB,oBAAoB,EAAE,aAAa;gBACnC,aAAa,EAAE,IAAI;aACpB;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE,QAAQ;gBACrB,UAAU,EAAE,SAAS;gBACrB,oBAAoB,EAAE,aAAa;gBACnC,aAAa,EAAE;oBACb,IAAI,EAAE,CAAC;oBACP,YAAY,EAAE,OAAO;oBACrB,UAAU,EAAE,SAAS;oBACrB,SAAS,EAAE,QAAQ;iBACpB;aACF;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE,MAAM;gBACnB,UAAU,EAAE,OAAO;gBACnB,oBAAoB,EAAE,aAAa;gBACnC,aAAa,EAAE;oBACb,IAAI,EAAE,CAAC;oBACP,YAAY,EAAE,aAAa;oBAC3B,UAAU,EAAE,QAAQ;oBACpB,SAAS,EAAE,QAAQ;iBACpB;aACF;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE,SAAS;gBACtB,UAAU,EAAE,WAAW;gBACvB,oBAAoB,EAAE,aAAa;gBACnC,aAAa,EAAE;oBACb,IAAI,EAAE,EAAE;oBACR,YAAY,EAAE,aAAa;oBAC3B,UAAU,EAAE,UAAU;oBACtB,SAAS,EAAE,QAAQ;iBACpB;aACF;SACF,CAAC;QAEF,gEAAgE;QAChE,IAAI,eAAe,GAAG;YACpB;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE;oBACX;wBACE,IAAI,EAAE,CAAC;wBACP,YAAY,EAAE,WAAW;wBACzB,UAAU,EAAE,UAAU;wBACtB,SAAS,EAAE,QAAQ;qBACpB;oBACD;wBACE,IAAI,EAAE,CAAC;wBACP,YAAY,EAAE,WAAW;wBACzB,UAAU,EAAE,QAAQ;wBACpB,SAAS,EAAE,QAAQ;qBACpB;oBACD;wBACE,IAAI,EAAE,EAAE;wBACR,YAAY,EAAE,YAAY;wBAC1B,UAAU,EAAE,UAAU;wBACtB,SAAS,EAAE,QAAQ;qBACpB;oBACD;wBACE,IAAI,EAAE,EAAE;wBACR,YAAY,EAAE,WAAW;wBACzB,UAAU,EAAE,WAAW;wBACvB,SAAS,EAAE,QAAQ;qBACpB;iBACF;aACF;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE;oBACX;wBACE,IAAI,EAAE,CAAC;wBACP,YAAY,EAAE,YAAY;wBAC1B,UAAU,EAAE,SAAS;wBACrB,SAAS,EAAE,QAAQ;qBACpB;oBACD;wBACE,IAAI,EAAE,CAAC;wBACP,YAAY,EAAE,YAAY;wBAC1B,UAAU,EAAE,UAAU;wBACtB,SAAS,EAAE,QAAQ;qBACpB;iBACF;aACF;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE;oBACX;wBACE,IAAI,EAAE,CAAC;wBACP,YAAY,EAAE,UAAU;wBACxB,UAAU,EAAE,WAAW;wBACvB,SAAS,EAAE,QAAQ;qBACpB;oBACD;wBACE,IAAI,EAAE,CAAC;wBACP,YAAY,EAAE,YAAY;wBAC1B,UAAU,EAAE,SAAS;wBACrB,SAAS,EAAE,QAAQ;qBACpB;iBACF;aACF;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE,EAAE;aAChB;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE;oBACX;wBACE,IAAI,EAAE,CAAC;wBACP,YAAY,EAAE,OAAO;wBACrB,UAAU,EAAE,SAAS;wBACrB,SAAS,EAAE,QAAQ;qBACpB;oBACD;wBACE,IAAI,EAAE,CAAC;wBACP,YAAY,EAAE,UAAU;wBACxB,UAAU,EAAE,UAAU;wBACtB,SAAS,EAAE,QAAQ;qBACpB;iBACF;aACF;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE;oBACX;wBACE,IAAI,EAAE,CAAC;wBACP,YAAY,EAAE,aAAa;wBAC3B,UAAU,EAAE,QAAQ;wBACpB,SAAS,EAAE,QAAQ;qBACpB;iBACF;aACF;YACD;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE;oBACX;wBACE,IAAI,EAAE,EAAE;wBACR,YAAY,EAAE,aAAa;wBAC3B,UAAU,EAAE,UAAU;wBACtB,SAAS,EAAE,QAAQ;qBACpB;iBACF;aACF;SACF,CAAC;QAEF,MAAM,CAAC,EAAC,OAAO,WAAE,eAAe,mBAAC,CAAC;IACpC,CAAC;IACH,eAAC;AAAD,CAAC;;;;;;;;;ACtMD,gF;;;;;;;;;;;;;;;;;;;ACAkD;AAKlD,IAAa,qBAAqB;IAEhC;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IAEH,4BAAC;AAAD,CAAC;AAPY,qBAAqB;IAHjC,+EAAS,CAAC;QACT,2FAA8C;KAC/C,CAAC;;GACW,qBAAqB,CAOjC;AAPiC;;;;;;;;;ACLlC;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oFAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/AngularProjects/ClientDatabase_2/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import {Injectable, OnInit} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\nimport {Observable} from 'rxjs/Observable';\nimport {Address} from './address';\nimport {AddressService} from './address.service';\n\n@Injectable()\nexport class AddressDetailResolver implements Resolve<Address[]> {\n\n  constructor(private _addressService: AddressService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Address[]> {\n    return this._addressService.getAllAddresses(+route.paramMap.get('id'));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/addresses/address-detail-resolver.service.ts","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"activeAddress\\\">\\r\\n  <form [formGroup]=\\\"addressForm\\\" class=\\\"form-horizontal\\\" novalidate (ngSubmit)=\\\"onSubmit(activeAddress.id)\\\">\\r\\n    <fieldset>\\r\\n\\r\\n      <legend *ngIf=\\\"!isNewAddress; else newAddress\\\" i18n=\\\"@@addressForm.legendEditAddress\\\">Address to be edited: {{activeAddress.streetName}}, {{activeAddress.cityName}}, {{activeAddress.zipCode}}</legend>\\r\\n      <ng-template #newAddress>\\r\\n        <legend i18n=\\\"@@addressForm.legendAddAddress\\\">Add new address for client {{activeClient?.firstName}} {{activeClient?.lastName}}</legend>\\r\\n      </ng-template>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-lg-2\\\" for=\\\"id\\\" i18n=\\\"@@addressForm.addressId\\\">Address ID</label>\\r\\n        <div class=\\\"col-lg-5\\\">\\r\\n          <input *ngIf=\\\"activeAddress.id; else idMessage\\\" class=\\\"form-control\\\" id=\\\"id\\\" type=\\\"text\\\"\\r\\n                 placeholder=\\\"{{activeAddress.id}}\\\" formControlName=\\\"id\\\" readonly=\\\"true\\\"/>\\r\\n          <ng-template #idMessage>\\r\\n            <input class=\\\"form-control\\\" id=\\\"emptyId\\\" type=\\\"text\\\" placeholder=\\\"ID will be generated by server\\\"\\r\\n                   formControlName=\\\"id\\\" readonly=\\\"true\\\" i18n-placeholder=\\\"@@idPlaceholder\\\"/>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-2 control-label\\\" for=\\\"streetName\\\" i18n=\\\"@@addressForm.streetName\\\">Street Name</label>\\r\\n        <div class=\\\"col-lg-5\\\">\\r\\n          <input class=\\\"form-control\\\" id=\\\"streetName\\\" type=\\\"text\\\"\\r\\n                 placeholder=\\\"Street Name\\\" formControlName=\\\"streetName\\\"\\r\\n                 i18n-placeholder=\\\"@@addressForm.streetName\\\"/>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-2 control-label\\\" for=\\\"cityName\\\" i18n=\\\"@@addressForm.cityName\\\">City Name</label>\\r\\n        <div class=\\\"col-lg-5\\\">\\r\\n          <input class=\\\"form-control\\\" id=\\\"cityName\\\" type=\\\"text\\\"\\r\\n                 placeholder=\\\"City Name\\\" formControlName=\\\"cityName\\\"\\r\\n                 i18n-placeholder=\\\"@@addressForm.cityName\\\"/>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-2 control-label\\\" for=\\\"zipCode\\\" i18n=\\\"@@addressForm.zipCode\\\">Zip Code</label>\\r\\n        <div class=\\\"col-lg-5\\\">\\r\\n          <input class=\\\"form-control\\\" id=\\\"zipCode\\\" type=\\\"text\\\"\\r\\n                 placeholder=\\\"Zip Code\\\" formControlName=\\\"zipCode\\\"\\r\\n                 i18n-placeholder=\\\"@@addressForm.zipCode\\\"/>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"col-lg-offset-2 col-lg-1\\\">\\r\\n          <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"isNewAddress; else oldAddress\\\" value=\\\"Add\\\" [disabled]=\\\"!addressForm.valid || submitted\\\" i18n-value=\\\"@@addButton\\\"/>\\r\\n          <ng-template #oldAddress>\\r\\n            <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Edit\\\" i18n-value=\\\"@@editButton\\\"\\r\\n                   [disabled]=\\\"!addressForm.valid || submitted\\\"/>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-offset-0 col-lg-1\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"onBack()\\\" i18n=\\\"@@backButton\\\">Back</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </fieldset>\\r\\n  </form>\\r\\n\\r\\n  <div *ngIf=\\\"formErrors.cityName || formErrors.streetName || formErrors.zipCode && addressForm.touched\\\"\\r\\n       class=\\\"alert alert-danger\\\">\\r\\n    <p>{{ formErrors.streetName }}</p>\\r\\n    <p>{{ formErrors.cityName }}</p>\\r\\n    <p>{{ formErrors.zipCode }}</p>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/AngularProjects/ClientDatabase_2/src/app/addresses/address-detail.component.html\n// module id = ../../../../../src/app/addresses/address-detail.component.html\n// module chunks = 1","import {Component, OnInit, ViewContainerRef} from '@angular/core';\nimport {Address} from './address';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ToastsManager} from 'ng2-toastr';\nimport {AddressService} from './address.service';\nimport {Client} from '../clients/client';\nimport {ValidationAndLocaleMessagesService} from '../shared/validation-and-locale-messages.service';\n\n@Component({\n  templateUrl: './address-detail.component.html',\n})\nexport class AddressDetailComponent implements OnInit {\n\n  public activeAddress: Address;\n  public activeClient: Client;\n  private clientId: number;\n  public isNewAddress: boolean;\n\n  public addressForm: FormGroup;\n  public submitted: boolean;\n\n  public formErrors = {\n    'cityName': '',\n    'streetName': '',\n    'zipCode': ''\n  };\n\n  constructor(private _addressService: AddressService, public _validationService: ValidationAndLocaleMessagesService,\n              private _route: ActivatedRoute, private _router: Router, private _toastr: ToastsManager,\n              private vcr: ViewContainerRef) {\n    this._toastr.setRootViewContainerRef(vcr);\n  }\n\n  ngOnInit() {\n    this.clientId = +this._route.snapshot.paramMap.get('id');\n    if (!this._route.snapshot.data['addresses']) {\n      this.activeAddress = new Address();\n      this.isNewAddress = true;\n    } else {\n      const data = this._route.snapshot.data['addresses'];\n      const addressId = +this._route.snapshot.paramMap.get('addressId');\n      this.activeAddress = data.find((element) => element.id === addressId);\n      this.isNewAddress = false;\n    }\n    this.activeClient = this._route.snapshot.data['client'];\n\n    const id = new FormControl('');\n    const streetName = new FormControl(this.activeAddress.streetName,\n      [Validators.required, Validators.minLength(3)]);\n    const cityName = new FormControl(this.activeAddress.cityName,\n      [Validators.required, Validators.minLength(3)]);\n    const zipCode = new FormControl(this.activeAddress.zipCode,\n      [Validators.required, Validators.minLength(6), Validators.maxLength(6),\n        Validators.pattern(/\\d{2}-\\d{3}/ig)]);\n\n    this.addressForm = new FormGroup({\n      id: id,\n      streetName: streetName,\n      cityName: cityName,\n      zipCode: zipCode\n    });\n\n    this.addressForm.valueChanges.subscribe(data => this._validationService.onValueChanged(this.addressForm, this.formErrors, data));\n\n    this._validationService.onValueChanged(this.addressForm, this.formErrors);\n  }\n\n  // onSubmit(id: number): void {\n  //   this.submitted = true;\n  //\n  //   if (this.isNewAddress) {\n  //     this.tryToSaveNewAddress();\n  //   } else {\n  //     if (this.checkForAddressDataDuplication()) {\n  //       return;\n  //     } else {\n  //       this.tryToUpdateAddress(id);\n  //     }\n  //   }\n  // }\n\n  // private tryToSaveNewAddress(): void {\n  //   this.activeAddress = this.addressForm.value;\n  //   this._addressService.saveNewAddress(this.activeAddress, this.clientId).subscribe(\n  //     response => this._toastr.success(this._validationService.getLocalizedMessages('addressAdded'),\n  //       this._validationService.getLocalizedMessages('successTitle')),\n  //     error => {\n  //       if (error === -1) {\n  //         this._toastr.error(this._validationService.getLocalizedMessages('addressNotAdded'),\n  //           this._validationService.getLocalizedMessages('errorTitle'));\n  //       } else {\n  //         this._toastr.error(error, this._validationService.getLocalizedMessages('errorTitle'));\n  //       }\n  //     }\n  //   );\n  // }\n\n  // private tryToUpdateAddress(id: number): void {\n  //   this.activeAddress = this.addressForm.value;\n  //   this.activeAddress.id = id;\n  //   this._addressService.updateAddress(this.activeAddress).subscribe(\n  //     response => this._toastr.success(response, this._validationService.getLocalizedMessages('successTitle')),\n  //     error => this._toastr.error(error, this._validationService.getLocalizedMessages('errorTitle')));\n  // }\n\n  private checkForAddressDataDuplication(): boolean {\n    // first check values that can differ the most\n    if (this.activeAddress.streetName === this.addressForm.value.streetName\n      && this.activeAddress.zipCode === this.addressForm.value.zipCode\n      && this.activeAddress.cityName === this.addressForm.value.cityName) {\n      this._toastr.error(this._validationService.getLocalizedMessages('addressExists'),\n        this._validationService.getLocalizedMessages('errorTitle'));\n      this.submitted = false;\n      return true;\n    }\n    return false;\n  }\n\n  onBack(): void {\n    this._router.navigate(['/clients', this.clientId, 'details']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/addresses/address-detail.component.ts","import {Injectable} from '@angular/core';\r\nimport {Headers, Http, RequestOptions, Response} from '@angular/http';\r\n\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/throw';\r\n\r\nimport {Address} from './address';\r\nimport {ErrorObservable} from 'rxjs/observable/ErrorObservable';\r\nimport {AuthenticationService} from '../login/authentication.service';\r\n\r\n@Injectable()\r\nexport class AddressService {\r\n\r\n  _getAllAddresses = '/api/clientAddresses/';\r\n\r\n  constructor(private _http: Http) {\r\n  }\r\n\r\n  getAllAddresses(id: number): Observable<Address[]> {\r\n    return this._http.get(this._getAllAddresses + id, this.requestBearer())\r\n      .map((response: Response) => response.json().addresses as Address[])\r\n      .do(data => console.log('All: ' + JSON.stringify(data)))\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  getBiggestId(): number {\r\n    const clients = JSON.parse(localStorage.getItem('addresses'));\r\n    let biggestId = -1;\r\n    clients.map(function (currentValue, index, array) {\r\n      if (biggestId < currentValue.id) {\r\n        biggestId = currentValue.id;\r\n      }\r\n    });\r\n    return biggestId;\r\n  }\r\n\r\n  private handleError(error: Response): ErrorObservable {\r\n    let errorMessage;\r\n    try {\r\n      errorMessage = error.json().errorMessage;\r\n    } catch (e) {\r\n      errorMessage = error.text();\r\n    } finally {\r\n      return Observable.throw(errorMessage || 'Server error');\r\n    }\r\n  }\r\n\r\n  private requestBearer(): RequestOptions {\r\n    return new RequestOptions({\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/addresses/address.service.ts","export class Address {\r\n  id: number;\r\n  streetName: string;\r\n  cityName: string;\r\n  zipCode: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/addresses/address.ts","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ClientListComponent} from './clients/client-list.component';\r\nimport {ClientFormComponent} from './clients/client-form.component';\r\nimport {ClientDetailComponent} from './clients/client-detail.component';\r\nimport {AboutAuthorComponent} from './utils/about-author.component';\r\nimport {PathNotFoundComponent} from './utils/path-not-found.component';\r\nimport {AddressDetailResolver} from './addresses/address-detail-resolver.service';\r\nimport {ClientDetailResolver} from './clients/client-detail-resolver.service';\r\nimport {AddressDetailComponent} from './addresses/address-detail.component';\r\nimport {CanActivateAuthGuard} from './login/can-activate-authguard';\r\nimport {LoginComponent} from './login/login.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot([\r\n      {path: 'clients', component: ClientListComponent},\r\n      {path: 'clients/new', component: ClientFormComponent, canActivate: [CanActivateAuthGuard]},\r\n      {\r\n        path: 'clients/:id/details',\r\n        component: ClientDetailComponent,\r\n        resolve: {\r\n          client: ClientDetailResolver,\r\n          addresses: AddressDetailResolver\r\n        },\r\n        canActivate: [CanActivateAuthGuard]\r\n      },\r\n      {\r\n        path: 'clients/:id',\r\n        component: ClientFormComponent,\r\n        resolve: {client: ClientDetailResolver},\r\n        canActivate: [CanActivateAuthGuard]\r\n      },\r\n      {\r\n        path: 'clients/:id/address/:addressId',\r\n        component: AddressDetailComponent,\r\n        resolve: {\r\n          addresses: AddressDetailResolver,\r\n          client: ClientDetailResolver\r\n        },\r\n        canActivate: [CanActivateAuthGuard]\r\n      },\r\n      {\r\n        path: 'clients/:id/newAddress',\r\n        component: AddressDetailComponent,\r\n        canActivate: [CanActivateAuthGuard]\r\n      },\r\n      {path: 'aboutUs', component: AboutAuthorComponent, outlet: 'messages'},\r\n      {path: 'login', component: LoginComponent},\r\n      {path: '', redirectTo: 'clients', pathMatch: 'full'},\r\n      {path: '**', component: PathNotFoundComponent},\r\n    ]),\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/AngularProjects/ClientDatabase_2/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-nav-hide\\\"\\n              aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"/ClientDatabaseAngularFront/\\\">\\n        <span class=\\\"glyphicon glyphicon-picture\\\" aria-hidden=\\\"true\\\"></span> ClientDatabase</a>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-nav-hide\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li><a (click)=\\\"showAboutAuthor()\\\" [ngStyle]=\\\"{'cursor':'pointer'}\\\" i18n=\\\"@@navbar.aboutAuthor\\\">About Author</a></li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li class=\\\"dropdown\\\">\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\"\\n             aria-expanded=\\\"false\\\" i18n=\\\"@@navbar.adminPanel\\\">Admin Panel <span class=\\\"caret\\\"></span></a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a [routerLink]=\\\"['/clients/new']\\\" i18n=\\\"@@navbar.addClient\\\">Add Client</a>\\n            </li>\\n            <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n            <li><a [routerLink]=\\\"['/login']\\\" i18n=\\\"@@navbar.logout\\\">Logout</a>\\n            </li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n<router-outlet name='messages'></router-outlet>\\n<router-outlet></router-outlet>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/AngularProjects/ClientDatabase_2/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthenticationService} from './login/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  private isAboutAuthorDisplayed: boolean;\n  private userName: string;\n\n  constructor(private _router: Router, public _authenticationService: AuthenticationService) { }\n\n  showAboutAuthor(): void {\n    if (!this.isAboutAuthorDisplayed) {\n      this._router.navigate([{ outlets: { messages: ['aboutUs'] } }]);\n      this.isAboutAuthorDisplayed = !this.isAboutAuthorDisplayed;\n    } else {\n      this._router.navigate([{ outlets: { messages: null } }]);\n      this.isAboutAuthorDisplayed = !this.isAboutAuthorDisplayed;\n    }\n  }\n\n  ngOnInit(): void {\n    this.userName = this._authenticationService.getUserName();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/app.component.ts","import {LOCALE_ID, NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {ClientFormComponent} from './clients/client-form.component';\nimport {ClientDetailComponent} from './clients/client-detail.component';\nimport {ClientListComponent} from './clients/client-list.component';\nimport {AboutAuthorComponent} from './utils/about-author.component';\nimport {PathNotFoundComponent} from './utils/path-not-found.component';\nimport {AddressDetailComponent} from './addresses/address-detail.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ToastModule} from 'ng2-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpModule} from '@angular/http';\nimport {ClientService} from './clients/client.service';\nimport {AddressService} from './addresses/address.service';\nimport {ClientDetailResolver} from './clients/client-detail-resolver.service';\nimport {AddressDetailResolver} from './addresses/address-detail-resolver.service';\nimport {AppRoutingModule} from './app-routing.module';\nimport {LoginComponent} from './login/login.component';\nimport {CanActivateAuthGuard} from './login/can-activate-authguard';\nimport {AuthenticationService} from './login/authentication.service';\nimport {ClientListResolver} from './clients/client-list-resolver';\nimport {ValidationAndLocaleMessagesService} from './shared/validation-and-locale-messages.service';\nimport {InMemoryWebApiModule} from 'angular-in-memory-web-api';\nimport {MockData} from './utils/mock-data';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClientListComponent,\n    ClientDetailComponent,\n    ClientFormComponent,\n    PathNotFoundComponent,\n    AboutAuthorComponent,\n    AddressDetailComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpModule,\n    AppRoutingModule,\n    ToastModule.forRoot(),\n    BrowserAnimationsModule,\n    InMemoryWebApiModule.forRoot(MockData, {\n      passThruUnknownUrl: true,\n      delay: 150\n    }),\n  ],\n  providers: [\n    {provide: LOCALE_ID, useValue: 'en'},\n    ClientService,\n    ClientDetailResolver,\n    ClientListResolver,\n    AddressService,\n    AddressDetailResolver,\n    AuthenticationService,\n    CanActivateAuthGuard,\n    ValidationAndLocaleMessagesService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/app.module.ts","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\nimport {Client} from './client';\nimport {ClientService} from './client.service';\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable()\nexport class ClientDetailResolver implements Resolve<Client> {\n\n  constructor(private _clientService: ClientService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Client> {\n    return this._clientService.getClient(+route.paramMap.get('id'));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/clients/client-detail-resolver.service.ts","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"addresses.length; else clientWithoutAddress\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <h2>{{client.firstName + ' ' + client.lastName}}</h2>\\n    <p i18n=\\\"@@clientDetail.dateOfRegistrationParagraph\\\">Date of registration: {{client.dateOfRegistration | date:'dd.MM.y'}}</p>\\n    <p i18n=\\\"@@clientDetail.mainAddressParagraph\\\">Main address: {{client.mainAddress.cityName + ', ' + client.mainAddress.streetName + ', '\\n      + client.mainAddress.zipCode}}</p>\\n  </div>\\n  <table class=\\\"table\\\" id=\\\"clientDetails\\\">\\n    <thead>\\n    <tr>\\n      <th>#</th>\\n      <th i18n=\\\"@@addressForm.cityName\\\">City Name</th>\\n      <th i18n=\\\"@@addressForm.streetName\\\">Street Name</th>\\n      <th i18n=\\\"@@addressForm.zipCode\\\">Zip Code</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let address of addresses\\\" (click)=\\\"markAsActive(address)\\\" [class.success]=\\\"address === activeAddress\\\">\\n      <th scope=\\\"row\\\">{{ address.id }}</th>\\n      <td>{{ address.cityName }}</td>\\n      <td>{{ address.streetName}}</td>\\n      <td>{{ address.zipCode }}</td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-lg-10\\\">\\n        <button type=\\\"button\\\" id=\\\"bAddAddress\\\" class=\\\"btn btn-info\\\" (click)=\\\"onAddAddress()\\\" i18n=\\\"@@addAddressButton\\\">Add Address</button>\\n        <button type=\\\"button\\\" id=\\\"bEditAddresses\\\" class=\\\"btn btn-info\\\" (click)=\\\"onEditAddresses()\\\" i18n=\\\"@@editAddressesButton\\\">Edit Client's Addresses</button>\\n        <button type=\\\"button\\\" id=\\\"bSetAsMainAddress\\\" class=\\\"btn btn-info\\\" (click)=\\\"onSetAsMainAddress()\\\" i18n=\\\"@@setMainAddressButton\\\">Set as Main Address</button>\\n        <button type=\\\"button\\\" id=\\\"bRemove\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onRemoveAddress()\\\" i18n=\\\"@@removeAddressButton\\\">Remove Address</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"onBack()\\\" i18n=\\\"@@backButton\\\">Back</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #clientWithoutAddress>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"jumbotron\\\">\\n      <p i18n=\\\"@@clientWithoutAddressesParagraph\\\">This client doesn't have any addresses.</p>\\n    </div>\\n  </div>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/AngularProjects/ClientDatabase_2/src/app/clients/client-detail.component.html\n// module id = ../../../../../src/app/clients/client-detail.component.html\n// module chunks = 1","import {Component, OnInit, ViewContainerRef} from '@angular/core';\nimport {AddressService} from '../addresses/address.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Client} from './client';\nimport {Address} from '../addresses/address';\nimport {ToastsManager} from 'ng2-toastr';\nimport {ValidationAndLocaleMessagesService} from '../shared/validation-and-locale-messages.service';\n\ndeclare var bootbox: any;\n\n@Component({\n  templateUrl: './client-detail.component.html',\n})\nexport class ClientDetailComponent implements OnInit {\n\n  public client: Client;\n  public addresses: Address[];\n  public activeAddress: Address;\n\n  constructor(private _addressService: AddressService, private _route: ActivatedRoute,\n              private _validationService: ValidationAndLocaleMessagesService,\n              private _router: Router, private _toastr: ToastsManager, private vcr: ViewContainerRef) {\n    this._toastr.setRootViewContainerRef(vcr);\n  }\n\n  ngOnInit() {\n    this.generateTable();\n  }\n\n  markAsActive(activeRow: Address): void {\n    if (this.activeAddress === activeRow) {\n      this.activeAddress = null;\n    } else {\n      this.activeAddress = activeRow;\n    }\n  }\n\n  onAddAddress(): boolean {\n    this._router.navigate(['/clients', this.client.id, 'newAddress']);\n    return true;\n  }\n\n  onEditAddresses(): boolean {\n    if (!this.activeAddress) {\n      return this.cannotProceed(this._validationService.getLocalizedMessages('rowNotSelected'));\n    } else {\n      this._router.navigate(['/clients', this.client.id, 'address', this.activeAddress.id]);\n      return true;\n    }\n  }\n\n  onSetAsMainAddress(): boolean {\n    if (!this.activeAddress) {\n      return this.cannotProceed(this._validationService.getLocalizedMessages('rowNotSelected'));\n    } else if (this.activeAddress.id === this.client.mainAddress.id) {\n      return this.cannotProceed(this._validationService.getLocalizedMessages('alreadyMainAddress'));\n    } else {\n      this.client.mainAddress = this.activeAddress;\n      this.activeAddress = null;\n      this.tryUpdateClient();\n      this._toastr.success(this._validationService.getLocalizedMessages('mainAddressUpdated'),\n        this._validationService.getLocalizedMessages('successTitle'));\n    }\n  }\n\n  // onRemoveAddress(): boolean {\n  //   if (!this.activeAddress) {\n  //     return this.cannotProceed(this._validationService.getLocalizedMessages('rowNotSelected'));\n  //   } else if (this.client.mainAddress.id === this.activeAddress.id) {\n  //     return this.cannotProceed(this._validationService.getLocalizedMessages('cannotDeleteMainAddress'),\n  //       'medium');\n  //   } else {\n  //     this.removeConfirm();\n  //   }\n  // }\n\n  // private removeConfirm(): void {\n  //   bootbox.confirm({\n  //     title: this._validationService.getLocalizedMessages('removeAddressConfirmTitle'),\n  //     message: this._validationService.getLocalizedMessages('removeAddressConfirmMessage'),\n  //     buttons: {\n  //       cancel: {\n  //         label: '<i class=\"fa fa-times\"></i> ' + this._validationService.getLocalizedMessages('cancelAction')\n  //       },\n  //       confirm: {\n  //         label: '<i class=\"fa fa-check\"></i> ' + this._validationService.getLocalizedMessages('confirmAction')\n  //       }\n  //     },\n  //     callback: (result) => {\n  //       if (result) {\n  //         this._addressService.deleteAddress(this.activeAddress.id, this.client.id).subscribe(\n  //           response => {\n  //             this._toastr.success(response, this._validationService.getLocalizedMessages('successTitle'));\n  //             this.addresses = this.addresses.filter((element) => element !== this.activeAddress);\n  //             this.activeAddress = null;\n  //             this._router.navigate(['/clients', this.client.id, 'details']);\n  //           }, error => this._toastr.error(error, this._validationService.getLocalizedMessages('errorTitle')));\n  //         return true;\n  //       } else {\n  //         return;\n  //       }\n  //     }\n  //   });\n  // }\n\n  private cannotProceed(message: string, size: string = 'small'): boolean {\n    bootbox.alert({\n      message: message,\n      size: size,\n      backdrop: true\n    });\n    return false;\n  }\n\n  private generateTable(): void {\n    this.client = this._route.snapshot.data['client'];\n\n    const localAddressesJson = localStorage.getItem('addresses');\n    if (localAddressesJson) {\n      this.addresses = JSON.parse(localAddressesJson);\n    } else {\n      this.addresses = this._route.snapshot.data['addresses'];\n    }\n  }\n\n  private tryUpdateClient(): void {\n    const clients: Client[] = JSON.parse(localStorage.getItem('clients'));\n    const wantedClient = clients.find(client => client.id === this.client.id);\n    wantedClient.mainAddress = this.client.mainAddress;\n\n    localStorage.setItem('clients', JSON.stringify(clients));\n  }\n\n  onBack(): void {\n    this._router.navigate(['/clients']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/clients/client-detail.component.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n  <form [formGroup]=\\\"clientForm\\\" class=\\\"form-horizontal\\\" novalidate (ngSubmit)=\\\"onSubmit(activeClient.id)\\\">\\r\\n    <fieldset>\\r\\n\\r\\n      <legend *ngIf=\\\"activeClient.id; else newClient\\\" i18n=\\\"@@clientForm.legendEditClient\\\">Client to be edited: {{activeClient?.firstName}} {{activeClient?.lastName}}</legend>\\r\\n      <ng-template #newClient>\\r\\n        <legend i18n=\\\"@@clientForm.legendAddClient\\\">Add new client</legend>\\r\\n      </ng-template>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-lg-2\\\" for=\\\"id\\\" i18n=\\\"@@clientForm.clientId\\\">Client ID</label>\\r\\n        <div class=\\\"col-lg-5\\\">\\r\\n          <input *ngIf=\\\"activeClient.id; else idMessage\\\" class=\\\"form-control\\\" id=\\\"id\\\" type=\\\"text\\\"\\r\\n                 placeholder=\\\"{{activeClient.id}}\\\" formControlName=\\\"id\\\" readonly=\\\"true\\\"/>\\r\\n          <ng-template #idMessage>\\r\\n            <input class=\\\"form-control\\\" id=\\\"emptyId\\\" type=\\\"text\\\" placeholder=\\\"ID will be generated by server\\\"\\r\\n                   formControlName=\\\"id\\\" readonly=\\\"true\\\" i18n-placeholder=\\\"@@idPlaceholder\\\"/>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-2 control-label\\\" for=\\\"firstName\\\" i18n=\\\"@@clientForm.firstName\\\">First Name</label>\\r\\n        <div class=\\\"col-lg-5\\\">\\r\\n          <input class=\\\"form-control\\\" id=\\\"firstName\\\" type=\\\"text\\\"\\r\\n                 placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\"\\r\\n                 i18n-placeholder=\\\"@@clientForm.firstName\\\"/>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-2 control-label\\\" for=\\\"lastName\\\" i18n=\\\"@@clientForm.lastName\\\">Last Name</label>\\r\\n        <div class=\\\"col-lg-5\\\">\\r\\n          <input class=\\\"form-control\\\" id=\\\"lastName\\\" type=\\\"text\\\"\\r\\n                 placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\"\\r\\n                 i18n-placeholder=\\\"@@clientForm.lastName\\\"/>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"!activeClient.id\\\">\\r\\n        <div class=\\\"col-lg-offset-2 col-lg-8\\\">\\r\\n          <input type=\\\"checkbox\\\" [checked]=\\\"shouldRedirectToAddressForm\\\"\\r\\n                 (change)=\\\"shouldRedirectToAddressForm = !shouldRedirectToAddressForm\\\"\\r\\n                 i18n=\\\"@@clientForm.shouldForward\\\"/>After submit forward me to new address form\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"col-lg-offset-2 col-lg-1\\\">\\r\\n          <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"isNewClient; else oldClient\\\" value=\\\"Add\\\"\\r\\n                 [disabled]=\\\"!clientForm.valid || submitted\\\" i18n-value=\\\"@@addButton\\\"/>\\r\\n          <ng-template #oldClient>\\r\\n            <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Edit\\\" i18n-value=\\\"@@editButton\\\"\\r\\n                   [disabled]=\\\"!clientForm.valid || submitted\\\"/>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-offset-0 col-lg-1\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"goBack()\\\" i18n=\\\"@@backButton\\\">Back</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </fieldset>\\r\\n  </form>\\r\\n\\r\\n  <div *ngIf=\\\"formErrors.firstName || formErrors.lastName\\\" class=\\\"alert alert-danger\\\">\\r\\n    <p>{{ formErrors.firstName }}</p>\\r\\n    <p>{{ formErrors.lastName }}</p>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/AngularProjects/ClientDatabase_2/src/app/clients/client-form.component.html\n// module id = ../../../../../src/app/clients/client-form.component.html\n// module chunks = 1","import {Component, OnInit, ViewContainerRef} from '@angular/core';\r\nimport {Client} from './client';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ClientService} from './client.service';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport {ValidationAndLocaleMessagesService} from '../shared/validation-and-locale-messages.service';\r\n\r\n@Component({\r\n  templateUrl: './client-form.component.html',\r\n})\r\nexport class ClientFormComponent implements OnInit {\r\n\r\n  public activeClient: Client;\r\n  public isNewClient: boolean;\r\n  public shouldRedirectToAddressForm: boolean;\r\n\r\n  public clientForm: FormGroup;\r\n  public submitted: boolean;\r\n\r\n  public formErrors = {\r\n    'firstName': '',\r\n    'lastName': ''\r\n  };\r\n\r\n  constructor(private _clientService: ClientService, private _validationService: ValidationAndLocaleMessagesService,\r\n              private _route: ActivatedRoute, private _router: Router, private _toastr: ToastsManager, private vcr: ViewContainerRef) {\r\n    this._toastr.setRootViewContainerRef(vcr);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this._route.snapshot.data['client']) {\r\n      this.activeClient = new Client();\r\n      this.isNewClient = true;\r\n    } else {\r\n      this.activeClient = this._route.snapshot.data['client'];\r\n      this.isNewClient = false;\r\n    }\r\n\r\n    const id = new FormControl();\r\n    const firstName = new FormControl(this.activeClient.firstName,\r\n      [Validators.required, Validators.minLength(3)]);\r\n    const lastName = new FormControl(this.activeClient.lastName,\r\n      [Validators.required, Validators.minLength(3)]);\r\n\r\n    this.clientForm = new FormGroup({\r\n      id: id,\r\n      firstName: firstName,\r\n      lastName: lastName\r\n    });\r\n\r\n    this.clientForm.valueChanges.subscribe(data => this._validationService.onValueChanged(this.clientForm, this.formErrors, data));\r\n\r\n    this._validationService.onValueChanged(this.clientForm, this.formErrors); // (re)set validation messages now\r\n  }\r\n\r\n  onSubmit(id: number): void {\r\n    this.submitted = true;\r\n\r\n    if (this.isNewClient) {\r\n      this.tryToSaveNewClient();\r\n    } else {\r\n      if (this.checkForClientDataDuplication()) {\r\n        return;\r\n      } else {\r\n        this.tryToUpdateClient(id);\r\n      }\r\n    }\r\n  }\r\n\r\n  private tryToSaveNewClient(): void {\r\n    this.activeClient = this.clientForm.value;\r\n\r\n    const clients: Client[] = JSON.parse(localStorage.getItem('clients'));\r\n    this.activeClient.id = this._clientService.getBiggestId() + 1;\r\n\r\n    if (this.activeClient.id === -1) {\r\n      this._toastr.error(this._validationService.getLocalizedMessages('clientNotAdded'),\r\n        this._validationService.getLocalizedMessages('errorTitle'));\r\n    } else {\r\n      clients.push(this.activeClient);\r\n      localStorage.setItem('clients', JSON.stringify(clients));\r\n    }\r\n\r\n    if (this.shouldRedirectToAddressForm) {\r\n      this._router.navigate(['/clients', this.activeClient.id, 'newAddress']);\r\n    } else {\r\n      this._toastr.success(this._validationService.getLocalizedMessages('clientAdded'),\r\n        this._validationService.getLocalizedMessages('successTitle'));\r\n    }\r\n  }\r\n\r\n  private tryToUpdateClient(id: number) {\r\n    this.activeClient = this.clientForm.value;\r\n    this.activeClient.id = id;\r\n\r\n    const clients: Client[] = JSON.parse(localStorage.getItem('clients'));\r\n    const wantedClient = clients.find(client => client.id === this.activeClient.id);\r\n    wantedClient.firstName = this.activeClient.firstName;\r\n    wantedClient.lastName = this.activeClient.lastName;\r\n\r\n    localStorage.setItem('clients', JSON.stringify(clients));\r\n\r\n    this._toastr.success(this._validationService.getLocalizedMessages('clientUpdated'),\r\n      this._validationService.getLocalizedMessages('successTitle'));\r\n  }\r\n\r\n  private checkForClientDataDuplication(): boolean {\r\n    if (this.activeClient.lastName === this.clientForm.value.lastName\r\n      && this.activeClient.firstName === this.clientForm.value.firstName) {\r\n      this._toastr.error(this._validationService.getLocalizedMessages('clientExists'),\r\n        this._validationService.getLocalizedMessages('errorTitle'));\r\n      this.submitted = false;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  goBack(): void {\r\n    this._router.navigate(['/clients']);\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/clients/client-form.component.ts","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\nimport {Client} from './client';\nimport {ClientService} from './client.service';\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable()\nexport class ClientListResolver implements Resolve<Client[]> {\n  constructor(private _clientService: ClientService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Client[]> {\n    return this._clientService.getAllClients();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/clients/client-list-resolver.ts","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"filteredClients && filteredClients.length !== 0; else emptyTable\\\">\\r\\n  <table class=\\\"table\\\" id=\\\"clientsTable\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <th>#</th>\\r\\n      <th i18n=\\\"@@clientForm.firstName\\\">First Name</th>\\r\\n      <th i18n=\\\"@@clientForm.lastName\\\">Last Name</th>\\r\\n      <th i18n=\\\"@@clientList.dateOfRegistration\\\">Date of registration</th>\\r\\n      <th i18n=\\\"@@clientList.city\\\">City</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor='let client of filteredClients' (click)=\\\"markAsActive(client)\\\" [class.success]=\\\"client === activeClient\\\">\\r\\n      <th scope=\\\"row\\\">{{ client.id }}</th>\\r\\n      <td>{{ client.firstName }}</td>\\r\\n      <td>{{ client.lastName }}</td>\\r\\n      <td>{{ client.dateOfRegistration | date:'dd.MM.y' }}</td>\\r\\n      <td>{{ client.mainAddress?.cityName}}</td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<h1></h1>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-lg-4\\\">\\r\\n        <button type=\\\"button\\\" id=\\\"bInfo\\\" class=\\\"btn btn-success\\\" (click)=\\\"onInfo()\\\" i18n=\\\"@@clientDetailsButton\\\">Client Details</button>\\r\\n        <button type=\\\"button\\\" id=\\\"bEditClient\\\" class=\\\"btn btn-info\\\" (click)=\\\"onEditClient()\\\" i18n=\\\"@@editClientButton\\\">Edit Client</button>\\r\\n        <button type=\\\"button\\\" id=\\\"bRemove\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onRemove()\\\" i18n=\\\"@@removeButton\\\">Remove</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-2 col-md-2 pull-right\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Filter clients\\\" i18n-placeholder=\\\"@@clientList.filterPlaceholder\\\" [(ngModel)]='filter'/>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<h1></h1>\\r\\n<ng-template #emptyTable>\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n      <p>{{ errorMessage }}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/AngularProjects/ClientDatabase_2/src/app/clients/client-list.component.html\n// module id = ../../../../../src/app/clients/client-list.component.html\n// module chunks = 1","import {Component, OnInit, ViewContainerRef} from '@angular/core';\r\nimport {Client} from './client';\r\nimport {ClientService} from './client.service';\r\nimport {Router} from '@angular/router';\r\nimport {ToastsManager} from 'ng2-toastr';\r\nimport {ValidationAndLocaleMessagesService} from '../shared/validation-and-locale-messages.service';\r\n\r\ndeclare var bootbox: any;\r\n\r\n@Component({\r\n  templateUrl: 'client-list.component.html'\r\n})\r\nexport class ClientListComponent implements OnInit {\r\n\r\n  private clients: Client[];\r\n  public filteredClients: Client[];\r\n  public activeClient: Client;\r\n  private _filter: string;\r\n  public errorMessage = this._validationService.getLocalizedMessages('dataBeingResolved');\r\n\r\n  constructor(private _clientService: ClientService, private _router: Router,\r\n              private _validationService: ValidationAndLocaleMessagesService,\r\n              private _toastr: ToastsManager, private vcr: ViewContainerRef) {\r\n    this._toastr.setRootViewContainerRef(vcr);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.generateTable();\r\n  }\r\n\r\n  get filter(): string {\r\n    return this._filter;\r\n  }\r\n\r\n  set filter(value: string) {\r\n    this._filter = value;\r\n    this.filteredClients = this.filter ? this.performFilter(this.filter) : this.clients;\r\n  }\r\n\r\n  private performFilter(filter: string): Client[] {\r\n    filter = filter.toLocaleLowerCase();\r\n    const filterBy: string[] = filter.split(/\\s/);\r\n    console.log(filterBy);\r\n    let filteredClients: Client[] = [];\r\n\r\n    if (filterBy.length === 2) {\r\n      filteredClients = this.clients.filter((client: Client) => {\r\n        return client.firstName.toLocaleLowerCase().indexOf(filterBy[0]) !== -1\r\n          && client.lastName.toLocaleLowerCase().indexOf(filterBy[1]) !== -1;\r\n      });\r\n    } else if (filterBy.length === 1) {\r\n      filteredClients = this.clients.filter((client: Client) => {\r\n        return client.firstName.toLocaleLowerCase().indexOf(filter) !== -1\r\n          || client.lastName.toLocaleLowerCase().indexOf(filter) !== -1;\r\n      });\r\n    }\r\n    if (filteredClients.length === 0) {\r\n      this.errorMessage = this._validationService.getLocalizedMessages('noMatchForFilter');\r\n      return null;\r\n    } else {\r\n      return filteredClients;\r\n    }\r\n  }\r\n\r\n  markAsActive(activeRow: Client): void {\r\n    if (this.activeClient === activeRow) {\r\n      this.activeClient = null;\r\n    } else {\r\n      this.activeClient = activeRow;\r\n    }\r\n    // this.activeClient = this.activeClient === activeRow ? null : activeRow;\r\n  }\r\n\r\n  onInfo(): boolean {\r\n    if (!this.isFieldSelected()) {\r\n      return false;\r\n    } else {\r\n      this._router.navigate(['/clients', this.activeClient.id, 'details']);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  onRemove(): boolean {\r\n    if (!this.isFieldSelected()) {\r\n      return false;\r\n    } else {\r\n      this.removeConfirm();\r\n    }\r\n  }\r\n\r\n  private removeConfirm(): void {\r\n    if (!JSON.parse(localStorage.getItem('currentUser'))) {\r\n      this._router.navigate(['/login']);\r\n      return;\r\n    }\r\n    bootbox.confirm({\r\n      title: this._validationService.getLocalizedMessages('removeClientConfirmTitle'),\r\n      message: this._validationService.getLocalizedMessages('removeClientConfirmMessage'),\r\n      buttons: {\r\n        cancel: {\r\n          label: '<i class=\"fa fa-times\"></i> ' + this._validationService.getLocalizedMessages('cancelAction')\r\n        },\r\n        confirm: {\r\n          label: '<i class=\"fa fa-check\"></i> ' + this._validationService.getLocalizedMessages('confirmAction')\r\n        }\r\n      },\r\n      callback: (result) => {\r\n        if (result) {\r\n          const data = this.clients.filter(client => client !== this.activeClient);\r\n          this.clients = data;\r\n          this.filteredClients = data;\r\n          this._toastr.success(this._validationService.getLocalizedMessages('clientRemoved'),\r\n            this._validationService.getLocalizedMessages('successTitle'));\r\n          this.activeClient = null;\r\n          localStorage.setItem('clients', JSON.stringify(this.clients));\r\n          return true;\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditClient(): boolean {\r\n    if (!this.isFieldSelected()) {\r\n      return false;\r\n    } else {\r\n      this._router.navigate(['/clients', this.activeClient.id]);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  private generateTable(): void {\r\n    const localClientsJson = localStorage.getItem('clients');\r\n    if (localClientsJson) {\r\n      this.clients = JSON.parse(localClientsJson);\r\n      this.checkArrayForClients();\r\n      this.filteredClients = this.clients;\r\n    } else {\r\n      this._clientService.getAllClients().subscribe(\r\n        clients => {\r\n          this.clients = clients;\r\n          this.checkArrayForClients();\r\n          this.filteredClients = this.clients;\r\n          localStorage.setItem('clients', JSON.stringify(this.clients));\r\n        }, error => {\r\n          this.errorMessage = this._validationService.getLocalizedMessages('serverOffline');\r\n          this._toastr.error(this.errorMessage, this._validationService.getLocalizedMessages('errorTitle'));\r\n        });\r\n    }\r\n  }\r\n\r\n  private checkArrayForClients() {\r\n    if (this.clients.length === 0) {\r\n      this.errorMessage = this._validationService.getLocalizedMessages('emptyDatabase');\r\n    }\r\n  }\r\n\r\n  private isFieldSelected(): boolean {\r\n    if (!this.activeClient) {\r\n      bootbox.alert({\r\n        message: this._validationService.getLocalizedMessages('rowNotSelected'),\r\n        size: 'small',\r\n        backdrop: true\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/clients/client-list.component.ts","import {Injectable} from '@angular/core';\r\nimport {Headers, Http, RequestOptions, Response} from '@angular/http';\r\n\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/throw';\r\nimport \"rxjs/add/observable/of\";\r\n\r\nimport {Client} from './client';\r\nimport {ErrorObservable} from 'rxjs/observable/ErrorObservable';\r\n\r\n@Injectable()\r\nexport class ClientService {\r\n\r\n  _getAllClients = '/api/clients';\r\n\r\n  constructor(private _http: Http) {\r\n  }\r\n\r\n  getAllClients(): Observable<Client[]> {\r\n    return this._http.get(this._getAllClients)\r\n      .map((response: Response) => response.json() as Client[])\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  getClient(clientId: number): Observable<Client> {\r\n    const clients = JSON.parse(localStorage.getItem('clients'));\r\n    const wantedClient = clients.find(client => client.id === clientId);\r\n    return Observable.of(wantedClient);\r\n  }\r\n\r\n  getBiggestId(): number {\r\n    const clients = JSON.parse(localStorage.getItem('clients'));\r\n    let biggestId = -1;\r\n    clients.map(function (currentValue, index, array) {\r\n      if (biggestId < currentValue.id) {\r\n        biggestId = currentValue.id;\r\n      }\r\n    });\r\n    return biggestId;\r\n  }\r\n\r\n  private handleError(error: Response): ErrorObservable {\r\n    let errorMessage;\r\n    try {\r\n      errorMessage = error.json().errorMessage;\r\n    } catch (e) {\r\n      errorMessage = error.text();\r\n    } finally {\r\n      return Observable.throw(errorMessage || 'Server error');\r\n    }\r\n  }\r\n\r\n  private requestBearer(): RequestOptions {\r\n    return new RequestOptions({\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/clients/client.service.ts","import {Address} from '../addresses/address';\r\n\r\nexport class Client {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  dateOfRegistration: string;\r\n  mainAddress: Address;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/clients/client.ts","import {Injectable} from '@angular/core';\r\nimport {Http, RequestOptions, Headers, Response} from '@angular/http';\r\nimport {Observable} from 'rxjs/Rx';\r\nimport {JwtHelper} from 'angular2-jwt';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  private username: string;\r\n  private password: string;\r\n\r\n  isLoggedIn(): boolean {\r\n    return !!localStorage.getItem('currentUser');\r\n  }\r\n\r\n  login(username: string, password: string): void {\r\n    this.username = username;\r\n    this.password = password;\r\n    localStorage.setItem('currentUser', JSON.stringify({username: username}));\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  getUserName(): string {\r\n    return this.username;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/login/authentication.service.ts","import {Injectable} from '@angular/core';\r\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthenticationService} from './authentication.service';\r\n\r\n@Injectable()\r\nexport class CanActivateAuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router, private authService: AuthenticationService) {\r\n  }\r\n\r\n  canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot) {\r\n    if (this.authService.isLoggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/login/can-activate-authguard.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/AngularProjects/ClientDatabase_2/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n  <section class=\\\"row\\\" *ngIf=\\\"logoutMessage\\\">\\r\\n    <div class=\\\"alert alert-info col-lg-6\\\">{{logoutMessage}}</div>\\r\\n  </section>\\r\\n  <div class=\\\"row\\\">\\r\\n    <form [formGroup]=\\\"userForm\\\" class=\\\"form-horizontal\\\" novalidate (ngSubmit)=\\\"login()\\\">\\r\\n      <fieldset>\\r\\n\\r\\n        <legend i18n=\\\"@@login.legend\\\">Please login to use this application</legend>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"control-label col-lg-2\\\" for=\\\"username\\\" i18n=\\\"@@login.username\\\">Username</label>\\r\\n          <div class=\\\"col-lg-5\\\">\\r\\n            <input class=\\\"form-control\\\" id=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"Username\\\"\\r\\n                   formControlName=\\\"username\\\" required i18n-placeholder=\\\"@@login.username\\\"/>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-md-2 control-label\\\" for=\\\"password\\\" i18n=\\\"@@login.password\\\">Password</label>\\r\\n          <div class=\\\"col-lg-5\\\">\\r\\n            <input class=\\\"form-control\\\" id=\\\"password\\\" type=\\\"password\\\"\\r\\n                   placeholder=\\\"Password\\\" formControlName=\\\"password\\\" i18n-placeholder=\\\"@@login.password\\\"/>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-offset-2 col-lg-2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" i18n=\\\"@@login.loginButton\\\">Log in</button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </fieldset>\\r\\n    </form>\\r\\n\\r\\n    <div *ngIf=\\\"formErrors.username || formErrors.password\\\" class=\\\"alert alert-danger\\\">\\r\\n      <p>{{ formErrors.username }}</p>\\r\\n      <p>{{ formErrors.password }}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/AngularProjects/ClientDatabase_2/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = 1","import {Component, OnInit, ViewContainerRef} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ValidationAndLocaleMessagesService} from '../shared/validation-and-locale-messages.service';\r\nimport {AuthenticationService} from './authentication.service';\r\nimport {ToastsManager} from 'ng2-toastr';\r\n\r\ndeclare const bootbox: any;\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public userForm: FormGroup;\r\n  public formErrors = {\r\n    'username': '',\r\n    'password': '',\r\n  };\r\n  public logoutMessage: string;\r\n\r\n  constructor(private _router: Router, private _authenticationService: AuthenticationService,\r\n              private _validationService: ValidationAndLocaleMessagesService, private _toastr: ToastsManager,\r\n              private vcr: ViewContainerRef, private _route: ActivatedRoute) {\r\n    this._toastr.setRootViewContainerRef(vcr);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._authenticationService.logout();\r\n\r\n    if (this._route.snapshot.paramMap.get('logout')) {\r\n      this.logoutMessage = this._validationService.getLocalizedMessages('userHasLogout');\r\n    }\r\n\r\n    const username = new FormControl('', [Validators.required, Validators.minLength(3)]);\r\n    const password = new FormControl('', [Validators.required]);\r\n\r\n    this.userForm = new FormGroup({\r\n      username: username,\r\n      password: password\r\n    });\r\n\r\n    this.userForm.valueChanges.subscribe(data => this._validationService.onValueChanged(this.userForm, this.formErrors, data));\r\n\r\n    this._validationService.onValueChanged(this.userForm, this.formErrors);\r\n  }\r\n\r\n  login(): void {\r\n    this._authenticationService.login(this.userForm.value.username, this.userForm.value.password);\r\n    this._router.navigate(['/clients']);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/login/login.component.ts","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\r\nimport {FormGroup} from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class ValidationAndLocaleMessagesService {\r\n  public validationMessages = {\r\n    en: {\r\n      'firstName': {\r\n        'required': 'First name is required.',\r\n        'minlength': 'First name must be at least 3 characters long.',\r\n      },\r\n      'lastName': {\r\n        'required': 'Last name is required.',\r\n        'minlength': 'Last name must be at least 3 characters long.',\r\n      },\r\n      'streetName': {\r\n        'required': 'Street name is required.',\r\n        'minlength': 'Street name must be at least 3 characters long.',\r\n      },\r\n      'cityName': {\r\n        'required': 'City name is required.',\r\n        'minlength': 'City name must be at least 3 characters long.',\r\n      },\r\n      'zipCode': {\r\n        'required': 'Zipcode is required.',\r\n        'minlength': 'Zipcode can\\'t have less values than 6.',\r\n        'maxlength': 'Zipcode can\\'t have more values than 6.',\r\n        'pattern': 'ZipCode value inserted is not valid',\r\n      },\r\n      'username': {\r\n        'required': 'Username is required.',\r\n        'minlength': 'Username must be at least 3 characters long.',\r\n      },\r\n      'password': {\r\n        'required': 'Password is required.',\r\n      },\r\n    },\r\n    pl: {\r\n      'firstName': {\r\n        'required': 'Imię klienta jest wymagane.',\r\n        'minlength': 'Imię klienta musi mieć długość conajmniej 3 znaków.',\r\n      },\r\n      'lastName': {\r\n        'required': 'Nazwisko klienta jest wymagane.',\r\n        'minlength': 'Nazwisko klienta musi mieć długość conajmniej 3 znaków.',\r\n      },\r\n      'streetName': {\r\n        'required': 'Nazwa ulicy jest wymagana.',\r\n        'minlength': 'Nazwa ulicy musi mieć długość conajmniej 3 znaków.',\r\n      },\r\n      'cityName': {\r\n        'required': 'Nazwa miasta jest wymagana.',\r\n        'minlength': 'Nazwa miasta musi mieć długość conajmniej 3 znaków.',\r\n      },\r\n      'zipCode': {\r\n        'required': 'Kod pocztowy jest wymagany.',\r\n        'minlength': 'Kod pocztowy musi mieć dokładnie 6 znaków (11-111).',\r\n        'maxlength': 'Kod pocztowy musi mieć dokładnie 6 znaków (11-111).',\r\n        'pattern': 'Podany kod pocztowy jest nieprawidłowy.',\r\n      },\r\n      'username': {\r\n        'required': 'Nazwa użytkownika jest wymagana.',\r\n        'minlength': 'Nazwa użytkownika musi mieć długość conajmniej 3 znaków.',\r\n      },\r\n      'password': {\r\n        'required': 'Hasło jest wymagane.',\r\n      },\r\n    }\r\n  };\r\n\r\n  public applicationMessages = {\r\n    en: {\r\n      'addressExists': 'Address already exists!',\r\n      'addressAdded': 'Address was successfully added.',\r\n      'addressNotAdded': 'Address wasn\\'t added. Please check if given address does not already exists.',\r\n      'alreadyMainAddress': 'This address is already a main address!',\r\n      'cannotDeleteMainAddress': 'You can\\'t delete address that is currently a main address.',\r\n      'removeAddressConfirmTitle': 'Address deletion',\r\n      'removeAddressConfirmMessage': 'Do you want to remove selected address?',\r\n\r\n      'clientExists': 'Client already exists!',\r\n      'clientAdded': 'Client was successfully added.',\r\n      'clientNotAdded': 'Client wasn\\'t added.',\r\n      'removeClientConfirmTitle': 'Client deletion',\r\n      'removeClientConfirmMessage': 'Do you want to remove selected client?',\r\n\r\n      'dataBeingResolved': 'Please wait while data is being resolved.',\r\n      'noMatchForFilter': 'There are no clients that match your filter sentence.',\r\n      'cancelAction': 'Cancel',\r\n      'confirmAction': 'Confirm',\r\n      'rowNotSelected': 'Please select an row.',\r\n      'userHasLogout': 'Logout successful.',\r\n      'tokenHasExpired': 'User token has expired! Please login again.',\r\n      'emptyDatabase': 'Server returned empty array, there are no users in database!',\r\n      'serverOffline': 'Server is offline.',\r\n      'errorTitle': 'Error!',\r\n      'successTitle': 'Success!',\r\n\r\n      // additional messages that would have been returned by back-end server\r\n      'clientRemoved': 'Client was successfully deleted.',\r\n      'clientUpdated': 'Client was successfully updated.',\r\n      'mainAddressUpdated' : 'Main address was succesfully updated'\r\n    },\r\n    pl: {\r\n      'addressExists': 'Adres już istnieje!',\r\n      'addressAdded': 'Adres został pomyślnie dodany.',\r\n      'addressNotAdded': 'Adres nie został dodany. Proszę sprawdzić czy dany adres już nie istnieje.',\r\n      'alreadyMainAddress': 'Ten adres już jest domyślnym adresem!',\r\n      'cannotDeleteMainAddress': 'Usunięcie domyślnego adresu jest niemożliwe.',\r\n      'removeAddressConfirmTitle': 'Usunięcie adresu',\r\n      'removeAddressConfirmMessage': 'Czy na pewno chcesz usunąć ten adres?',\r\n\r\n      'clientExists': 'Klient już istnieje!',\r\n      'clientAdded': 'Klient został pomyślnie dodany.',\r\n      'clientNotAdded': 'Adres nie został dodany.',\r\n      'removeClientConfirmTitle': 'Usunięcie klienta',\r\n      'removeClientConfirmMessage': 'Czy na pewno chcesz usunąć tego klienta?',\r\n\r\n      'dataBeingResolved': 'Proszę czekać, dane są pobierane w tle.',\r\n      'noMatchForFilter': 'Nie istnieje żaden klient spełniający kryteria wyszukiwania.',\r\n      'cancelAction': 'Anuluj',\r\n      'confirmAction': 'Kontynuuj',\r\n      'rowNotSelected': 'Proszę wybrać wiersz.',\r\n      'userHasLogout': 'Nastąpiło poprawne wylogowanie.',\r\n      'tokenHasExpired': 'Token użytkownika wygasł! Proszę zalogować się ponownie.',\r\n      'emptyDatabase': 'Serwer zwrócił pustą tablicę, baza danych jest pusta!',\r\n      'serverOffline': 'Serwer jest offline.',\r\n      'errorTitle': 'Błąd!',\r\n      'successTitle': 'Sukces!'\r\n    }\r\n  };\r\n\r\n  constructor(@Inject(LOCALE_ID) public localeId: string) {\r\n  }\r\n\r\n  public getLocalizedValidationMessages(field: any) {\r\n    return this.validationMessages[this.localeId][field];\r\n  }\r\n\r\n  public getLocalizedMessages(field: string) {\r\n    return this.applicationMessages[this.localeId][field];\r\n  }\r\n\r\n  public onValueChanged(form: FormGroup, formErrors: {}, data ?: any) {\r\n    if (!form) {\r\n      return;\r\n    }\r\n    for (const field in formErrors) {\r\n      if (formErrors.hasOwnProperty(field)) {\r\n        // check field\r\n        formErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && control.dirty && !control.valid) {\r\n          const messages = this.getLocalizedValidationMessages(field);\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              formErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/shared/validation-and-locale-messages.service.ts","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <h1 i18n=\\\"@@aboutAuthor.mainHeader\\\">Hello,</h1>\\n    <h2 i18n=\\\"@@aboutAuthor.secondaryHeader\\\">from secondary route</h2>\\n    <p i18n=\\\"@@aboutAuthor.checkMyWorkParagraph\\\">Check my projects at github:</p>\\n    <p><a href=\\\"https://github.com/Kreattehak\\\">Github Account -> Kreattehak</a></p>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/AngularProjects/ClientDatabase_2/src/app/utils/about-author.component.html\n// module id = ../../../../../src/app/utils/about-author.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './about-author.component.html'\n})\nexport class AboutAuthorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/utils/about-author.component.ts","import {InMemoryDbService} from 'angular-in-memory-web-api';\r\n\r\nexport class MockData implements InMemoryDbService {\r\n  createDb() {\r\n    let clients = [\r\n      {\r\n        'id': 1,\r\n        'firstName': 'Dany',\r\n        'lastName': 'Devito',\r\n        'dateOfRegistration': 1508104800000,\r\n        'mainAddress': {\r\n          'id': 1,\r\n          'streetName': 'Krakowska',\r\n          'cityName': 'Katowice',\r\n          'zipCode': '47-789'\r\n        }\r\n      },\r\n      {\r\n        'id': 2,\r\n        'firstName': 'Bany',\r\n        'lastName': 'Devito',\r\n        'dateOfRegistration': 1508104800000,\r\n        'mainAddress': {\r\n          'id': 5,\r\n          'streetName': 'Warszawska',\r\n          'cityName': 'Wrocław',\r\n          'zipCode': '78-987'\r\n        }\r\n      },\r\n      {\r\n        'id': 3,\r\n        'firstName': 'Nany',\r\n        'lastName': 'Devito',\r\n        'dateOfRegistration': 1508104800000,\r\n        'mainAddress': {\r\n          'id': 3,\r\n          'streetName': 'Gliwicka',\r\n          'cityName': 'Mysłowice',\r\n          'zipCode': '47-987'\r\n        }\r\n      },\r\n      {\r\n        'id': 4,\r\n        'firstName': 'Without',\r\n        'lastName': 'Address',\r\n        'dateOfRegistration': 1508104800000,\r\n        'mainAddress': null\r\n      },\r\n      {\r\n        'id': 5,\r\n        'firstName': 'Devito',\r\n        'lastName': 'Kurkuma',\r\n        'dateOfRegistration': 1508104800000,\r\n        'mainAddress': {\r\n          'id': 7,\r\n          'streetName': 'Baker',\r\n          'cityName': 'Czikago',\r\n          'zipCode': '66-789'\r\n        }\r\n      },\r\n      {\r\n        'id': 6,\r\n        'firstName': 'Bill',\r\n        'lastName': 'Colab',\r\n        'dateOfRegistration': 1508104800000,\r\n        'mainAddress': {\r\n          'id': 9,\r\n          'streetName': 'Jasnogórska',\r\n          'cityName': 'Zamość',\r\n          'zipCode': '64-745'\r\n        }\r\n      },\r\n      {\r\n        'id': 7,\r\n        'firstName': 'Andrzej',\r\n        'lastName': 'Chrząszcz',\r\n        'dateOfRegistration': 1508104800000,\r\n        'mainAddress': {\r\n          'id': 10,\r\n          'streetName': 'Górnośląska',\r\n          'cityName': 'Katowice',\r\n          'zipCode': '34-576'\r\n        }\r\n      }\r\n    ];\r\n\r\n    // need to extract data from this array by id in address service\r\n    let clientAddresses = [\r\n      {\r\n        'id': 1,\r\n        'addresses': [\r\n          {\r\n            'id': 1,\r\n            'streetName': 'Krakowska',\r\n            'cityName': 'Katowice',\r\n            'zipCode': '47-789'\r\n          },\r\n          {\r\n            'id': 2,\r\n            'streetName': 'Katowicka',\r\n            'cityName': 'Kraków',\r\n            'zipCode': '65-789'\r\n          },\r\n          {\r\n            'id': 11,\r\n            'streetName': 'Mysłowicka',\r\n            'cityName': 'Katowice',\r\n            'zipCode': '40-478'\r\n          },\r\n          {\r\n            'id': 12,\r\n            'streetName': 'Katowicka',\r\n            'cityName': 'Mysłowice',\r\n            'zipCode': '47-977'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'id': 2,\r\n        'addresses': [\r\n          {\r\n            'id': 5,\r\n            'streetName': 'Warszawska',\r\n            'cityName': 'Wrocław',\r\n            'zipCode': '78-987'\r\n          },\r\n          {\r\n            'id': 6,\r\n            'streetName': 'Wrocławska',\r\n            'cityName': 'Warszawa',\r\n            'zipCode': '98-784'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'id': 3,\r\n        'addresses': [\r\n          {\r\n            'id': 3,\r\n            'streetName': 'Gliwicka',\r\n            'cityName': 'Mysłowice',\r\n            'zipCode': '47-987'\r\n          },\r\n          {\r\n            'id': 4,\r\n            'streetName': 'Mysłowicka',\r\n            'cityName': 'Gliwice',\r\n            'zipCode': '98-784'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'id': 4,\r\n        'addresses': []\r\n      },\r\n      {\r\n        'id': 5,\r\n        'addresses': [\r\n          {\r\n            'id': 7,\r\n            'streetName': 'Baker',\r\n            'cityName': 'Czikago',\r\n            'zipCode': '66-789'\r\n          },\r\n          {\r\n            'id': 8,\r\n            'streetName': 'Downtown',\r\n            'cityName': 'Arkanzas',\r\n            'zipCode': '12-345'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'id': 6,\r\n        'addresses': [\r\n          {\r\n            'id': 9,\r\n            'streetName': 'Jasnogórska',\r\n            'cityName': 'Zamość',\r\n            'zipCode': '64-745'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        'id': 7,\r\n        'addresses': [\r\n          {\r\n            'id': 10,\r\n            'streetName': 'Górnośląska',\r\n            'cityName': 'Katowice',\r\n            'zipCode': '34-576'\r\n          }\r\n        ]\r\n      },\r\n    ];\r\n\r\n    return {clients, clientAddresses};\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/utils/mock-data.ts","module.exports = \"<p i18n=\\\"@@pathNotFound.pathNotFound\\\">Path not found!</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/AngularProjects/ClientDatabase_2/src/app/utils/path-not-found.component.html\n// module id = ../../../../../src/app/utils/path-not-found.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './path-not-found.component.html'\n})\nexport class PathNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/app/utils/path-not-found.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// E:/AngularProjects/ClientDatabase_2/src/main.ts"],"sourceRoot":"webpack:///"}